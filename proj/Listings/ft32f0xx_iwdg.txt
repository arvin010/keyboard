; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\ft32f0xx_iwdg.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\ft32f0xx_iwdg.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\FTLib\CMSIS\inc -I..\FTLib\Inc -I..\FTLib\Lib -I..\usb\inc -I..\user -I..\RTT -I..\iap2 -IC:\Users\dell1\AppData\Local\Arm\Packs\FMD\FT32F0xx_DFP\1.0.6\Drivers\CMSIS\FT32F0xx\Include -D__UVISION_VERSION=534 -DFT32F072x8 -DFT32F072x8 --omf_browse=.\objects\ft32f0xx_iwdg.crf ..\FTLib\Src\ft32f0xx_iwdg.c]
                          THUMB

                          AREA ||i.IWDG_Enable||, CODE, READONLY, ALIGN=2

                  IWDG_Enable PROC
;;;115      */
;;;116    void IWDG_Enable(void)
000000  4801              LDR      r0,|L1.8|
;;;117    {
;;;118      IWDG->KR = KR_KEY_ENABLE;
000002  4902              LDR      r1,|L1.12|
000004  6008              STR      r0,[r1,#0]
;;;119    }
000006  4770              BX       lr
;;;120    
                          ENDP

                  |L1.8|
                          DCD      0x0000cccc
                  |L1.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  IWDG_GetFlagStatus PROC
;;;133      */
;;;134    FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
000000  4601              MOV      r1,r0
;;;135    {
;;;136      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;137      /* Check the parameters */
;;;138      assert_param(IS_IWDG_FLAG(IWDG_FLAG));
;;;139      if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
000004  4a04              LDR      r2,|L2.24|
000006  68d2              LDR      r2,[r2,#0xc]
000008  400a              ANDS     r2,r2,r1
00000a  2a00              CMP      r2,#0
00000c  d001              BEQ      |L2.18|
;;;140      {
;;;141        bitstatus = SET;
00000e  2001              MOVS     r0,#1
000010  e000              B        |L2.20|
                  |L2.18|
;;;142      }
;;;143      else
;;;144      {
;;;145        bitstatus = RESET;
000012  2000              MOVS     r0,#0
                  |L2.20|
;;;146      }
;;;147      /* Return the flag status */
;;;148      return bitstatus;
;;;149    }
000014  4770              BX       lr
;;;150    
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
                          DCD      0x40003000

                          AREA ||i.IWDG_ReloadCounter||, CODE, READONLY, ALIGN=2

                  IWDG_ReloadCounter PROC
;;;76       */
;;;77     void IWDG_ReloadCounter(void)
000000  4801              LDR      r0,|L3.8|
;;;78     {
;;;79       IWDG->KR = KR_KEY_RELOAD;
000002  4902              LDR      r1,|L3.12|
000004  6008              STR      r0,[r1,#0]
;;;80     }
000006  4770              BX       lr
;;;81     
                          ENDP

                  |L3.8|
                          DCD      0x0000aaaa
                  |L3.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetPrescaler||, CODE, READONLY, ALIGN=2

                  IWDG_SetPrescaler PROC
;;;50       */
;;;51     void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
000000  4901              LDR      r1,|L4.8|
;;;52     {
;;;53       /* Check the parameters */
;;;54       assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
;;;55       IWDG->PR = IWDG_Prescaler;
000002  6048              STR      r0,[r1,#4]
;;;56     }
000004  4770              BX       lr
;;;57     
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetReload||, CODE, READONLY, ALIGN=2

                  IWDG_SetReload PROC
;;;63       */
;;;64     void IWDG_SetReload(uint16_t Reload)
000000  4901              LDR      r1,|L5.8|
;;;65     {
;;;66       /* Check the parameters */
;;;67       assert_param(IS_IWDG_RELOAD(Reload));
;;;68       IWDG->RLR = Reload;
000002  6088              STR      r0,[r1,#8]
;;;69     }
000004  4770              BX       lr
;;;70     
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetWindowValue||, CODE, READONLY, ALIGN=2

                  IWDG_SetWindowValue PROC
;;;87       */
;;;88     void IWDG_SetWindowValue(uint16_t WindowValue)
000000  4901              LDR      r1,|L6.8|
;;;89     {
;;;90       /* Check the parameters */
;;;91       assert_param(IS_IWDG_WINDOW_VALUE(WindowValue));
;;;92       IWDG->WINR = WindowValue;
000002  6108              STR      r0,[r1,#0x10]
;;;93     }
000004  4770              BX       lr
;;;94     
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40003000

                          AREA ||i.IWDG_WriteAccessCmd||, CODE, READONLY, ALIGN=2

                  IWDG_WriteAccessCmd PROC
;;;30       */
;;;31     void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
000000  4901              LDR      r1,|L7.8|
;;;32     {
;;;33       /* Check the parameters */
;;;34       assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
;;;35       IWDG->KR = IWDG_WriteAccess;
000002  6008              STR      r0,[r1,#0]
;;;36     }
000004  4770              BX       lr
;;;37     
                          ENDP

000006  0000              DCW      0x0000
                  |L7.8|
                          DCD      0x40003000

;*** Start embedded assembler ***

#line 1 "..\\FTLib\\Src\\ft32f0xx_iwdg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_ft32f0xx_iwdg_c_15798b01____REV16|
#line 129 "..\\FTLib\\CMSIS\\inc\\core_cmInstr.h"
|__asm___15_ft32f0xx_iwdg_c_15798b01____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_ft32f0xx_iwdg_c_15798b01____REVSH|
#line 144
|__asm___15_ft32f0xx_iwdg_c_15798b01____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
