; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\ft32f0xx_syscfg.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\ft32f0xx_syscfg.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\FTLib\CMSIS\inc -I..\FTLib\Inc -I..\FTLib\Lib -I..\usb\inc -I..\user -I..\RTT -I..\iap2 -IC:\Users\dell1\AppData\Local\Arm\Packs\FMD\FT32F0xx_DFP\1.0.6\Drivers\CMSIS\FT32F0xx\Include -D__UVISION_VERSION=534 -DFT32F072x8 -DFT32F072x8 --omf_browse=.\objects\ft32f0xx_syscfg.crf ..\FTLib\Src\ft32f0xx_syscfg.c]
                          THUMB

                          AREA ||i.SYSCFG_BreakConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_BreakConfig PROC
;;;203      */
;;;204    void SYSCFG_BreakConfig(uint32_t SYSCFG_Break)
000000  4902              LDR      r1,|L1.12|
;;;205    {
;;;206      /* Check the parameter */
;;;207      assert_param(IS_SYSCFG_LOCK_CONFIG(SYSCFG_Break));
;;;208    
;;;209      SYSCFG->CFGR2 |= (uint32_t) SYSCFG_Break;
000002  6989              LDR      r1,[r1,#0x18]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L1.12|
000008  6191              STR      r1,[r2,#0x18]
;;;210    }
00000a  4770              BX       lr
;;;211    
                          ENDP

                  |L1.12|
                          DCD      0x40010000

                          AREA ||i.SYSCFG_DMAChannelRemapConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_DMAChannelRemapConfig PROC
;;;91       */
;;;92     void SYSCFG_DMAChannelRemapConfig(uint32_t SYSCFG_DMARemap, FunctionalState NewState)
000000  2900              CMP      r1,#0
;;;93     {
;;;94       /* Check the parameters */
;;;95       assert_param(IS_SYSCFG_DMA_REMAP(SYSCFG_DMARemap));
;;;96       assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;97     
;;;98       if (NewState != DISABLE)
000002  d005              BEQ      |L2.16|
;;;99       {
;;;100        /* Remap the DMA channel */
;;;101        SYSCFG->CFGR1 |= (uint32_t)SYSCFG_DMARemap;
000004  4a05              LDR      r2,|L2.28|
000006  6812              LDR      r2,[r2,#0]
000008  4302              ORRS     r2,r2,r0
00000a  4b04              LDR      r3,|L2.28|
00000c  601a              STR      r2,[r3,#0]
00000e  e004              B        |L2.26|
                  |L2.16|
;;;102      }
;;;103      else
;;;104      {
;;;105        /* use the default DMA channel mapping */
;;;106        SYSCFG->CFGR1 &= (uint32_t)(~SYSCFG_DMARemap);
000010  4a02              LDR      r2,|L2.28|
000012  6812              LDR      r2,[r2,#0]
000014  4382              BICS     r2,r2,r0
000016  4b01              LDR      r3,|L2.28|
000018  601a              STR      r2,[r3,#0]
                  |L2.26|
;;;107      }
;;;108    }
00001a  4770              BX       lr
;;;109    
                          ENDP

                  |L2.28|
                          DCD      0x40010000

                          AREA ||i.SYSCFG_DeInit||, CODE, READONLY, ALIGN=2

                  SYSCFG_DeInit PROC
;;;29       */
;;;30     void SYSCFG_DeInit(void)
000000  4808              LDR      r0,|L3.36|
;;;31     {
;;;32       /* Set SYSCFG_CFGR1 register to reset value without affecting MEM_MODE bits */
;;;33       SYSCFG->CFGR1 &= SYSCFG_CFGR1_MEM_MODE;
000002  6800              LDR      r0,[r0,#0]
000004  0780              LSLS     r0,r0,#30
000006  0f80              LSRS     r0,r0,#30
000008  4906              LDR      r1,|L3.36|
00000a  6008              STR      r0,[r1,#0]
;;;34       /* Set EXTICRx registers to reset value */
;;;35       SYSCFG->EXTICR[0] = 0;
00000c  2000              MOVS     r0,#0
00000e  6088              STR      r0,[r1,#8]
;;;36       SYSCFG->EXTICR[1] = 0;
000010  2100              MOVS     r1,#0
000012  4804              LDR      r0,|L3.36|
000014  60c1              STR      r1,[r0,#0xc]
;;;37       SYSCFG->EXTICR[2] = 0;
000016  6101              STR      r1,[r0,#0x10]
;;;38       SYSCFG->EXTICR[3] = 0;
000018  6141              STR      r1,[r0,#0x14]
;;;39       /* Set CFGR2 register to reset value: clear SRAM parity error flag */
;;;40       SYSCFG->CFGR2 |= 0;
00001a  6980              LDR      r0,[r0,#0x18]
00001c  4901              LDR      r1,|L3.36|
00001e  6188              STR      r0,[r1,#0x18]
;;;41     }
000020  4770              BX       lr
;;;42     
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      0x40010000

                          AREA ||i.SYSCFG_EXTILineConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_EXTILineConfig PROC
;;;179      */
;;;180    void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
000000  b530              PUSH     {r4,r5,lr}
;;;181    {
;;;182      uint32_t tmp = 0x00;
000002  2200              MOVS     r2,#0
;;;183    
;;;184      /* Check the parameters */
;;;185      assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
;;;186      assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
;;;187      
;;;188      tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
000004  078b              LSLS     r3,r1,#30
000006  0f1c              LSRS     r4,r3,#28
000008  230f              MOVS     r3,#0xf
00000a  40a3              LSLS     r3,r3,r4
00000c  461a              MOV      r2,r3
;;;189      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
00000e  4b0b              LDR      r3,|L4.60|
000010  108c              ASRS     r4,r1,#2
000012  00a4              LSLS     r4,r4,#2
000014  591b              LDR      r3,[r3,r4]
000016  4393              BICS     r3,r3,r2
000018  4c08              LDR      r4,|L4.60|
00001a  108d              ASRS     r5,r1,#2
00001c  00ad              LSLS     r5,r5,#2
00001e  5163              STR      r3,[r4,r5]
;;;190      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03)));
000020  4623              MOV      r3,r4
000022  108c              ASRS     r4,r1,#2
000024  00a4              LSLS     r4,r4,#2
000026  591b              LDR      r3,[r3,r4]
000028  078c              LSLS     r4,r1,#30
00002a  0f25              LSRS     r5,r4,#28
00002c  4604              MOV      r4,r0
00002e  40ac              LSLS     r4,r4,r5
000030  4323              ORRS     r3,r3,r4
000032  4c02              LDR      r4,|L4.60|
000034  108d              ASRS     r5,r1,#2
000036  00ad              LSLS     r5,r5,#2
000038  5163              STR      r3,[r4,r5]
;;;191    }
00003a  bd30              POP      {r4,r5,pc}
;;;192    
                          ENDP

                  |L4.60|
                          DCD      0x40010008

                          AREA ||i.SYSCFG_I2CFastModePlusConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_I2CFastModePlusConfig PROC
;;;135      */
;;;136    void SYSCFG_I2CFastModePlusConfig(uint32_t SYSCFG_I2CFastModePlus, FunctionalState NewState)
000000  2900              CMP      r1,#0
;;;137    {
;;;138      /* Check the parameters */
;;;139      assert_param(IS_SYSCFG_I2C_FMP(SYSCFG_I2CFastModePlus));
;;;140      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;141    
;;;142      if (NewState != DISABLE)
000002  d005              BEQ      |L5.16|
;;;143      {
;;;144        /* Enable fast mode plus driving capability for selected pin */
;;;145        SYSCFG->CFGR1 |= (uint32_t)SYSCFG_I2CFastModePlus;
000004  4a05              LDR      r2,|L5.28|
000006  6812              LDR      r2,[r2,#0]
000008  4302              ORRS     r2,r2,r0
00000a  4b04              LDR      r3,|L5.28|
00000c  601a              STR      r2,[r3,#0]
00000e  e004              B        |L5.26|
                  |L5.16|
;;;146      }
;;;147      else
;;;148      {
;;;149        /* Disable fast mode plus driving capability for selected pin */
;;;150        SYSCFG->CFGR1 &= (uint32_t)(~SYSCFG_I2CFastModePlus);
000010  4a02              LDR      r2,|L5.28|
000012  6812              LDR      r2,[r2,#0]
000014  4382              BICS     r2,r2,r0
000016  4b01              LDR      r3,|L5.28|
000018  601a              STR      r2,[r3,#0]
                  |L5.26|
;;;151      }
;;;152    }
00001a  4770              BX       lr
;;;153    
                          ENDP

                  |L5.28|
                          DCD      0x40010000

                          AREA ||i.SYSCFG_IRDAEnvSelection||, CODE, READONLY, ALIGN=2

                  SYSCFG_IRDAEnvSelection PROC
;;;161      */
;;;162    void SYSCFG_IRDAEnvSelection(uint32_t SYSCFG_IRDAEnv)
000000  4905              LDR      r1,|L6.24|
;;;163    {
;;;164      /* Check the parameters */
;;;165      assert_param(IS_SYSCFG_IRDA_ENV(SYSCFG_IRDAEnv));
;;;166      
;;;167      SYSCFG->CFGR1 &= ~(SYSCFG_CFGR1_IRDA_ENV_SEL);
000002  6809              LDR      r1,[r1,#0]
000004  22c0              MOVS     r2,#0xc0
000006  4391              BICS     r1,r1,r2
000008  4a03              LDR      r2,|L6.24|
00000a  6011              STR      r1,[r2,#0]
;;;168      SYSCFG->CFGR1 |= (SYSCFG_IRDAEnv);
00000c  4611              MOV      r1,r2
00000e  6809              LDR      r1,[r1,#0]
000010  4301              ORRS     r1,r1,r0
000012  6011              STR      r1,[r2,#0]
;;;169    }
000014  4770              BX       lr
;;;170    
                          ENDP

000016  0000              DCW      0x0000
                  |L6.24|
                          DCD      0x40010000

                          AREA ||i.SYSCFG_MemoryRemapConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_MemoryRemapConfig PROC
;;;51       */
;;;52     void SYSCFG_MemoryRemapConfig(uint32_t SYSCFG_MemoryRemap)
000000  4601              MOV      r1,r0
;;;53     {
;;;54       uint32_t tmpctrl = 0;
000002  2000              MOVS     r0,#0
;;;55     
;;;56       /* Check the parameter */
;;;57       assert_param(IS_SYSCFG_MEMORY_REMAP(SYSCFG_MemoryRemap));
;;;58     
;;;59       /* Get CFGR1 register value */
;;;60       tmpctrl = SYSCFG->CFGR1;
000004  4a04              LDR      r2,|L7.24|
000006  6810              LDR      r0,[r2,#0]
;;;61     
;;;62       /* Clear MEM_MODE bits */
;;;63       tmpctrl &= (uint32_t) (~SYSCFG_CFGR1_MEM_MODE);
000008  0880              LSRS     r0,r0,#2
00000a  0080              LSLS     r0,r0,#2
;;;64     
;;;65       /* Set the new MEM_MODE bits value */
;;;66       tmpctrl |= (uint32_t) SYSCFG_MemoryRemap;
00000c  4602              MOV      r2,r0
00000e  430a              ORRS     r2,r2,r1
000010  4610              MOV      r0,r2
;;;67     
;;;68       /* Set CFGR1 register with the new memory remap configuration */
;;;69       SYSCFG->CFGR1 = tmpctrl;
000012  4a01              LDR      r2,|L7.24|
000014  6010              STR      r0,[r2,#0]
;;;70     }
000016  4770              BX       lr
;;;71     
                          ENDP

                  |L7.24|
                          DCD      0x40010000

;*** Start embedded assembler ***

#line 1 "..\\FTLib\\Src\\ft32f0xx_syscfg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_ft32f0xx_syscfg_c_57637610____REV16|
#line 129 "..\\FTLib\\CMSIS\\inc\\core_cmInstr.h"
|__asm___17_ft32f0xx_syscfg_c_57637610____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_ft32f0xx_syscfg_c_57637610____REVSH|
#line 144
|__asm___17_ft32f0xx_syscfg_c_57637610____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
