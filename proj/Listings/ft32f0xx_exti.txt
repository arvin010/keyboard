; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\ft32f0xx_exti.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\ft32f0xx_exti.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\FTLib\CMSIS\inc -I..\FTLib\Inc -I..\FTLib\Lib -I..\usb\inc -I..\user -I..\RTT -I..\iap2 -IC:\Users\dell1\AppData\Local\Arm\Packs\FMD\FT32F0xx_DFP\1.0.6\Drivers\CMSIS\FT32F0xx\Include -D__UVISION_VERSION=534 -DFT32F072x8 -DFT32F072x8 --omf_browse=.\objects\ft32f0xx_exti.crf ..\FTLib\Src\ft32f0xx_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;160      */
;;;161    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;162    {
;;;163      /* Check the parameters */
;;;164      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;165    
;;;166      EXTI->PR = EXTI_Line;
000002  6148              STR      r0,[r1,#0x14]
;;;167    }
000004  4770              BX       lr
;;;168    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010400

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;198      */
;;;199    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;200    {
;;;201      /* Check the parameters */
;;;202      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;203    
;;;204      EXTI->PR = EXTI_Line;
000002  6148              STR      r0,[r1,#0x14]
;;;205    }
000004  4770              BX       lr
;;;206    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010400

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;35       */
;;;36     void EXTI_DeInit(void)
000000  4804              LDR      r0,|L3.20|
;;;37     {
;;;38       EXTI->IMR = 0x0F940000;
000002  4905              LDR      r1,|L3.24|
000004  6008              STR      r0,[r1,#0]
;;;39       EXTI->EMR = 0x00000000;
000006  2000              MOVS     r0,#0
000008  6048              STR      r0,[r1,#4]
;;;40       EXTI->RTSR = 0x00000000;
00000a  6088              STR      r0,[r1,#8]
;;;41       EXTI->FTSR = 0x00000000;
00000c  60c8              STR      r0,[r1,#0xc]
;;;42       EXTI->PR = 0x006BFFFF;
00000e  4803              LDR      r0,|L3.28|
000010  6148              STR      r0,[r1,#0x14]
;;;43     }
000012  4770              BX       lr
;;;44     
                          ENDP

                  |L3.20|
                          DCD      0x0f940000
                  |L3.24|
                          DCD      0x40010400
                  |L3.28|
                          DCD      0x006bffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;122      */
;;;123    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;124    {
;;;125      /* Check the parameters */
;;;126      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;127    
;;;128      EXTI->SWIER |= EXTI_Line;
000002  6909              LDR      r1,[r1,#0x10]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L4.12|
000008  6111              STR      r1,[r2,#0x10]
;;;129    }
00000a  4770              BX       lr
;;;130    
                          ENDP

                  |L4.12|
                          DCD      0x40010400

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;137      */
;;;138    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;139    {
;;;140       FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;141      /* Check the parameters */
;;;142      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;143    
;;;144      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a04              LDR      r2,|L5.24|
000006  6952              LDR      r2,[r2,#0x14]
000008  400a              ANDS     r2,r2,r1
00000a  2a00              CMP      r2,#0
00000c  d001              BEQ      |L5.18|
;;;145      {
;;;146        bitstatus = SET;
00000e  2001              MOVS     r0,#1
000010  e000              B        |L5.20|
                  |L5.18|
;;;147      }
;;;148      else
;;;149      {
;;;150        bitstatus = RESET;
000012  2000              MOVS     r0,#0
                  |L5.20|
;;;151      }
;;;152      return bitstatus;
;;;153    }
000014  4770              BX       lr
;;;154    
                          ENDP

000016  0000              DCW      0x0000
                  |L5.24|
                          DCD      0x40010400

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;174      */
;;;175    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;176    {
;;;177      ITStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;178    
;;;179      /* Check the parameters */
;;;180      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;181    
;;;182      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a04              LDR      r2,|L6.24|
000006  6952              LDR      r2,[r2,#0x14]
000008  400a              ANDS     r2,r2,r1
00000a  2a00              CMP      r2,#0
00000c  d001              BEQ      |L6.18|
;;;183      {
;;;184        bitstatus = SET;
00000e  2001              MOVS     r0,#1
000010  e000              B        |L6.20|
                  |L6.18|
;;;185      }
;;;186      else
;;;187      {
;;;188        bitstatus = RESET;
000012  2000              MOVS     r0,#0
                  |L6.20|
;;;189      }
;;;190      return bitstatus;
;;;191    }
000014  4770              BX       lr
;;;192    
                          ENDP

000016  0000              DCW      0x0000
                  |L6.24|
                          DCD      0x40010400

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;51       */
;;;52     void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;53     {
;;;54       uint32_t tmp = 0;
;;;55     
;;;56       /* Check the parameters */
;;;57       assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;58       assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;59       assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));
;;;60       assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;61     
;;;62       tmp = (uint32_t)EXTI_BASE;
000002  4920              LDR      r1,|L7.132|
;;;63     
;;;64       if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7982              LDRB     r2,[r0,#6]
000006  2a00              CMP      r2,#0
000008  d035              BEQ      |L7.118|
;;;65       {
;;;66         /* Clear EXTI line configuration */
;;;67         EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  460a              MOV      r2,r1
00000c  6812              LDR      r2,[r2,#0]
00000e  6803              LDR      r3,[r0,#0]
000010  439a              BICS     r2,r2,r3
000012  460b              MOV      r3,r1
000014  601a              STR      r2,[r3,#0]
;;;68         EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000016  460a              MOV      r2,r1
000018  6852              LDR      r2,[r2,#4]
00001a  6803              LDR      r3,[r0,#0]
00001c  439a              BICS     r2,r2,r3
00001e  460b              MOV      r3,r1
000020  605a              STR      r2,[r3,#4]
;;;69     
;;;70         tmp += EXTI_InitStruct->EXTI_Mode;
000022  7902              LDRB     r2,[r0,#4]
000024  1851              ADDS     r1,r2,r1
;;;71     
;;;72         *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000026  680a              LDR      r2,[r1,#0]
000028  6803              LDR      r3,[r0,#0]
00002a  431a              ORRS     r2,r2,r3
00002c  600a              STR      r2,[r1,#0]
;;;73     
;;;74         /* Clear Rising Falling edge configuration */
;;;75         EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
00002e  4a15              LDR      r2,|L7.132|
000030  6892              LDR      r2,[r2,#8]
000032  6803              LDR      r3,[r0,#0]
000034  439a              BICS     r2,r2,r3
000036  4b13              LDR      r3,|L7.132|
000038  609a              STR      r2,[r3,#8]
;;;76         EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00003a  461a              MOV      r2,r3
00003c  68d2              LDR      r2,[r2,#0xc]
00003e  6803              LDR      r3,[r0,#0]
000040  439a              BICS     r2,r2,r3
000042  4b10              LDR      r3,|L7.132|
000044  60da              STR      r2,[r3,#0xc]
;;;77     
;;;78         /* Select the trigger for the selected interrupts */
;;;79         if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000046  7942              LDRB     r2,[r0,#5]
000048  2a10              CMP      r2,#0x10
00004a  d10c              BNE      |L7.102|
;;;80         {
;;;81           /* Rising Falling edge */
;;;82           EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
00004c  461a              MOV      r2,r3
00004e  6892              LDR      r2,[r2,#8]
000050  6803              LDR      r3,[r0,#0]
000052  431a              ORRS     r2,r2,r3
000054  4b0b              LDR      r3,|L7.132|
000056  609a              STR      r2,[r3,#8]
;;;83           EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
000058  461a              MOV      r2,r3
00005a  68d2              LDR      r2,[r2,#0xc]
00005c  6803              LDR      r3,[r0,#0]
00005e  431a              ORRS     r2,r2,r3
000060  4b08              LDR      r3,|L7.132|
000062  60da              STR      r2,[r3,#0xc]
000064  e00d              B        |L7.130|
                  |L7.102|
;;;84         }
;;;85         else
;;;86         {
;;;87           tmp = (uint32_t)EXTI_BASE;
000066  4907              LDR      r1,|L7.132|
;;;88           tmp += EXTI_InitStruct->EXTI_Trigger;
000068  7942              LDRB     r2,[r0,#5]
00006a  1851              ADDS     r1,r2,r1
;;;89     
;;;90           *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00006c  680a              LDR      r2,[r1,#0]
00006e  6803              LDR      r3,[r0,#0]
000070  431a              ORRS     r2,r2,r3
000072  600a              STR      r2,[r1,#0]
000074  e005              B        |L7.130|
                  |L7.118|
;;;91         }
;;;92       }
;;;93       else
;;;94       {
;;;95         tmp += EXTI_InitStruct->EXTI_Mode;
000076  7902              LDRB     r2,[r0,#4]
000078  1851              ADDS     r1,r2,r1
;;;96     
;;;97         /* Disable the selected external lines */
;;;98         *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
00007a  680a              LDR      r2,[r1,#0]
00007c  6803              LDR      r3,[r0,#0]
00007e  439a              BICS     r2,r2,r3
000080  600a              STR      r2,[r1,#0]
                  |L7.130|
;;;99       }
;;;100    }
000082  4770              BX       lr
;;;101    
                          ENDP

                  |L7.132|
                          DCD      0x40010400

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;107      */
;;;108    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;109    {
;;;110      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
000002  6001              STR      r1,[r0,#0]
;;;111      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000004  7101              STRB     r1,[r0,#4]
;;;112      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  210c              MOVS     r1,#0xc
000008  7141              STRB     r1,[r0,#5]
;;;113      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  2100              MOVS     r1,#0
00000c  7181              STRB     r1,[r0,#6]
;;;114    }
00000e  4770              BX       lr
;;;115    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\FTLib\\Src\\ft32f0xx_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_ft32f0xx_exti_c_28b3b60e____REV16|
#line 129 "..\\FTLib\\CMSIS\\inc\\core_cmInstr.h"
|__asm___15_ft32f0xx_exti_c_28b3b60e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_ft32f0xx_exti_c_28b3b60e____REVSH|
#line 144
|__asm___15_ft32f0xx_exti_c_28b3b60e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
