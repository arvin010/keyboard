; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\ft32f0xx_dac.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\ft32f0xx_dac.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\FTLib\CMSIS\inc -I..\FTLib\Inc -I..\FTLib\Lib -I..\usb\inc -I..\user -I..\RTT -I.\RTE\_Keyboard -IC:\Users\Reidgjiao\AppData\Local\Arm\Packs\FMD\FT32F0xx_DFP\1.0.6\Drivers\CMSIS\FT32F0xx\Include -IC:\Keil_v5-MDK\ARM\CMSIS\Include -D__UVISION_VERSION=529 -DFT32F072x8 -DFT32F072x8 --omf_browse=.\objects\ft32f0xx_dac.crf ..\FTLib\Src\ft32f0xx_dac.c]
                          THUMB

                          AREA ||i.DAC_Cmd||, CODE, READONLY, ALIGN=2

                  DAC_Cmd PROC
;;;31     	*/
;;;32     void DAC_Cmd(FunctionalState NewState)
000000  2800              CMP      r0,#0
;;;33     {
;;;34     	if(NewState != DISABLE)
000002  d006              BEQ      |L1.18|
;;;35     	{
;;;36     		DAC->CTRL |= DAC_CTRL_EN;
000004  4906              LDR      r1,|L1.32|
000006  6a09              LDR      r1,[r1,#0x20]
000008  2201              MOVS     r2,#1
00000a  4311              ORRS     r1,r1,r2
00000c  4a04              LDR      r2,|L1.32|
00000e  6211              STR      r1,[r2,#0x20]
000010  e005              B        |L1.30|
                  |L1.18|
;;;37     	}
;;;38     	else
;;;39     	{
;;;40     		DAC->CTRL &= ~DAC_CTRL_EN;		
000012  4903              LDR      r1,|L1.32|
000014  6a09              LDR      r1,[r1,#0x20]
000016  0849              LSRS     r1,r1,#1
000018  0049              LSLS     r1,r1,#1
00001a  4a01              LDR      r2,|L1.32|
00001c  6211              STR      r1,[r2,#0x20]
                  |L1.30|
;;;41     	}
;;;42     }
00001e  4770              BX       lr
;;;43     
                          ENDP

                  |L1.32|
                          DCD      0x40010000

                          AREA ||i.DAC_Read_Reg||, CODE, READONLY, ALIGN=2

                  DAC_Read_Reg PROC
;;;72     	*/
;;;73     uint8_t DAC_Read_Reg(uint8_t DAC_Register)
000000  b508              PUSH     {r3,lr}
;;;74     {
000002  4601              MOV      r1,r0
;;;75       __IO uint32_t tmp = 0;
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
;;;76     
;;;77       tmp = (uint32_t)DAC_BASE;
000008  4804              LDR      r0,|L2.28|
00000a  9000              STR      r0,[sp,#0]
;;;78       tmp += DAC_Register;
00000c  9800              LDR      r0,[sp,#0]
00000e  1840              ADDS     r0,r0,r1
000010  9000              STR      r0,[sp,#0]
;;;79     
;;;80       /* Return the selected register value */
;;;81       return (uint8_t)(*(__IO uint32_t *) tmp);
000012  9800              LDR      r0,[sp,#0]
000014  6800              LDR      r0,[r0,#0]
000016  b2c0              UXTB     r0,r0
;;;82     }
000018  bd08              POP      {r3,pc}
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      0x40010000

                          AREA ||i.DAC_Ref_Config||, CODE, READONLY, ALIGN=2

                  DAC_Ref_Config PROC
;;;16     	*/
;;;17     void DAC_Ref_Config(uint32_t	DAC_RefSel)
000000  4601              MOV      r1,r0
;;;18     {
;;;19     	uint32_t tmpreg = 0;
000002  2000              MOVS     r0,#0
;;;20     	
;;;21     	assert_param(IS_DAC_REF_SEL(DAC_RefSel));
;;;22     	
;;;23     	tmpreg = DAC->CTRL;
000004  4a07              LDR      r2,|L3.36|
000006  6a10              LDR      r0,[r2,#0x20]
;;;24     	tmpreg &= ~DAC_CTRL_REF_SEL;
000008  2306              MOVS     r3,#6
00000a  4602              MOV      r2,r0
00000c  439a              BICS     r2,r2,r3
00000e  4610              MOV      r0,r2
;;;25     	tmpreg |= DAC_RefSel;
000010  4602              MOV      r2,r0
000012  430a              ORRS     r2,r2,r1
000014  4610              MOV      r0,r2
;;;26     	
;;;27     	DAC->CTRL |= tmpreg;
000016  4a03              LDR      r2,|L3.36|
000018  6a12              LDR      r2,[r2,#0x20]
00001a  4302              ORRS     r2,r2,r0
00001c  4b01              LDR      r3,|L3.36|
00001e  621a              STR      r2,[r3,#0x20]
;;;28     }
000020  4770              BX       lr
;;;29     /**
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      0x40010000

                          AREA ||i.DAC_SetChannel1Data||, CODE, READONLY, ALIGN=2

                  DAC_SetChannel1Data PROC
;;;50       */
;;;51     void DAC_SetChannel1Data(uint32_t DAC_Align, uint8_t Data)
000000  4a01              LDR      r2,|L4.8|
;;;52     {  
;;;53       /* Check the parameters */
;;;54       assert_param(IS_DAC_DATA(Data));
;;;55       
;;;56       DAC->DATA1 = (uint32_t)Data;
000002  6251              STR      r1,[r2,#0x24]
;;;57     }
000004  4770              BX       lr
;;;58     
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40010000

                          AREA ||i.DAC_SetChannel2Data||, CODE, READONLY, ALIGN=2

                  DAC_SetChannel2Data PROC
;;;58     
;;;59     void DAC_SetChannel2Data(uint32_t DAC_Align, uint8_t Data)
000000  4a01              LDR      r2,|L5.8|
;;;60     {  
;;;61       /* Check the parameters */
;;;62       assert_param(IS_DAC_DATA(Data));
;;;63       
;;;64       DAC->DATA2 = (uint32_t)Data;
000002  6291              STR      r1,[r2,#0x28]
;;;65     }
000004  4770              BX       lr
;;;66     
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      0x40010000

;*** Start embedded assembler ***

#line 1 "..\\FTLib\\Src\\ft32f0xx_dac.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_ft32f0xx_dac_c_4fe62cf4____REV16|
#line 129 "..\\FTLib\\CMSIS\\inc\\core_cmInstr.h"
|__asm___14_ft32f0xx_dac_c_4fe62cf4____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_ft32f0xx_dac_c_4fe62cf4____REVSH|
#line 144
|__asm___14_ft32f0xx_dac_c_4fe62cf4____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
