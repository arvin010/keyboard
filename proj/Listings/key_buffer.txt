; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\key_buffer.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\key_buffer.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\FTLib\CMSIS\inc -I..\FTLib\Inc -I..\FTLib\Lib -I..\usb\inc -I..\user -I..\RTT -I..\iap2 -IC:\Users\dell1\AppData\Local\Arm\Packs\FMD\FT32F0xx_DFP\1.0.6\Drivers\CMSIS\FT32F0xx\Include -D__UVISION_VERSION=534 -DFT32F072x8 -DFT32F072x8 --omf_browse=.\objects\key_buffer.crf ..\user\key_buffer.c]
                          THUMB

                          AREA ||i.get_key||, CODE, READONLY, ALIGN=1

                  get_key PROC
;;;23     
;;;24     uint8_t get_key(key_buf_t* key_buf, uint8_t key)
000000  b510              PUSH     {r4,lr}
;;;25     {
000002  4602              MOV      r2,r0
;;;26         return (key_buf->data[key & 0x0F] & (1 << ((key & 0xF0) >> 4))) >> ((key & 0xF0) >> 4);
000004  0708              LSLS     r0,r1,#28
000006  0ec0              LSRS     r0,r0,#27
000008  5a10              LDRH     r0,[r2,r0]
00000a  23f0              MOVS     r3,#0xf0
00000c  400b              ANDS     r3,r3,r1
00000e  111c              ASRS     r4,r3,#4
000010  2301              MOVS     r3,#1
000012  40a3              LSLS     r3,r3,r4
000014  4018              ANDS     r0,r0,r3
000016  23f0              MOVS     r3,#0xf0
000018  400b              ANDS     r3,r3,r1
00001a  111b              ASRS     r3,r3,#4
00001c  4118              ASRS     r0,r0,r3
00001e  b2c0              UXTB     r0,r0
;;;27     }
000020  bd10              POP      {r4,pc}
;;;28     
                          ENDP


                          AREA ||i.get_key_down_list||, CODE, READONLY, ALIGN=1

                  get_key_down_list PROC
;;;32     
;;;33     uint8_t get_key_down_list(key_buf_t* key_buf, uint8_t* recv, uint8_t len)
000000  b5f7              PUSH     {r0-r2,r4-r7,lr}
;;;34     {
000002  4604              MOV      r4,r0
000004  460f              MOV      r7,r1
;;;35         uint8_t i, j, key = 0, index = 0;
000006  2300              MOVS     r3,#0
000008  2000              MOVS     r0,#0
;;;36     
;;;37         for(i = 0; i < 16; ++i)
00000a  2100              MOVS     r1,#0
00000c  e023              B        |L2.86|
                  |L2.14|
;;;38         {
;;;39             /*查询字节*/
;;;40             if(key_buf->data[i] != 0x00)
00000e  004d              LSLS     r5,r1,#1
000010  5b65              LDRH     r5,[r4,r5]
000012  2d00              CMP      r5,#0
000014  d01d              BEQ      |L2.82|
;;;41             {
;;;42                 for(j = 0; j < 16; ++j)
000016  2200              MOVS     r2,#0
000018  e019              B        |L2.78|
                  |L2.26|
;;;43                 {
;;;44                     /*查询位*/
;;;45                     if((1 << j) & key_buf->data[i])
00001a  2501              MOVS     r5,#1
00001c  4095              LSLS     r5,r5,r2
00001e  004e              LSLS     r6,r1,#1
000020  5ba6              LDRH     r6,[r4,r6]
000022  4035              ANDS     r5,r5,r6
000024  2d00              CMP      r5,#0
000026  d010              BEQ      |L2.74|
;;;46                     {
;;;47                         if(index >= len)
000028  9d02              LDR      r5,[sp,#8]
00002a  42a8              CMP      r0,r5
00002c  db00              BLT      |L2.48|
                  |L2.46|
;;;48                         {
;;;49                             return index;
;;;50                         }
;;;51                         key |= j;
;;;52                         key <<= 4;
;;;53                         key |= i;
;;;54                         recv[index++] = key;
;;;55                         key = 0x00;
;;;56                     }
;;;57                 }
;;;58             }
;;;59         }
;;;60         return index;
;;;61     }
00002e  bdfe              POP      {r1-r7,pc}
                  |L2.48|
000030  461d              MOV      r5,r3                 ;51
000032  4315              ORRS     r5,r5,r2              ;51
000034  462b              MOV      r3,r5                 ;51
000036  071d              LSLS     r5,r3,#28             ;52
000038  0e2b              LSRS     r3,r5,#24             ;52
00003a  461d              MOV      r5,r3                 ;53
00003c  430d              ORRS     r5,r5,r1              ;53
00003e  462b              MOV      r3,r5                 ;53
000040  4605              MOV      r5,r0                 ;54
000042  1c46              ADDS     r6,r0,#1              ;54
000044  b2f0              UXTB     r0,r6                 ;54
000046  557b              STRB     r3,[r7,r5]            ;54
000048  2300              MOVS     r3,#0                 ;55
                  |L2.74|
00004a  1c55              ADDS     r5,r2,#1              ;42
00004c  b2ea              UXTB     r2,r5                 ;42
                  |L2.78|
00004e  2a10              CMP      r2,#0x10              ;42
000050  dbe3              BLT      |L2.26|
                  |L2.82|
000052  1c4d              ADDS     r5,r1,#1              ;37
000054  b2e9              UXTB     r1,r5                 ;37
                  |L2.86|
000056  2910              CMP      r1,#0x10              ;37
000058  dbd9              BLT      |L2.14|
00005a  bf00              NOP                            ;60
00005c  e7e7              B        |L2.46|
;;;62     
                          ENDP


                          AREA ||i.key_clear||, CODE, READONLY, ALIGN=1

                  key_clear PROC
;;;66     
;;;67     void key_clear(key_buf_t* key_buf)
000000  b510              PUSH     {r4,lr}
;;;68     {
000002  4604              MOV      r4,r0
;;;69         memset(key_buf->data, 0x00, sizeof(key_buf->data));
000004  2120              MOVS     r1,#0x20
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       __aeabi_memclr
;;;70     }
00000c  bd10              POP      {r4,pc}
;;;71     
                          ENDP


                          AREA ||i.key_down||, CODE, READONLY, ALIGN=1

                  key_down PROC
;;;5      
;;;6      void key_down(key_buf_t* key_buf, uint8_t key)
000000  b510              PUSH     {r4,lr}
;;;7      {
;;;8          key_buf->data[key & 0x0F] |= 1 << ((key & 0xF0) >> 4);
000002  070a              LSLS     r2,r1,#28
000004  0ed2              LSRS     r2,r2,#27
000006  5a82              LDRH     r2,[r0,r2]
000008  23f0              MOVS     r3,#0xf0
00000a  400b              ANDS     r3,r3,r1
00000c  111c              ASRS     r4,r3,#4
00000e  2301              MOVS     r3,#1
000010  40a3              LSLS     r3,r3,r4
000012  431a              ORRS     r2,r2,r3
000014  070b              LSLS     r3,r1,#28
000016  0edb              LSRS     r3,r3,#27
000018  52c2              STRH     r2,[r0,r3]
;;;9      }
00001a  bd10              POP      {r4,pc}
;;;10     
                          ENDP


                          AREA ||i.key_up||, CODE, READONLY, ALIGN=1

                  key_up PROC
;;;14     
;;;15     void key_up(key_buf_t* key_buf, uint8_t key)
000000  b510              PUSH     {r4,lr}
;;;16     {
;;;17         key_buf->data[key & 0x0F] &= ~(1 << ((key & 0xF0) >> 4));
000002  070a              LSLS     r2,r1,#28
000004  0ed2              LSRS     r2,r2,#27
000006  5a82              LDRH     r2,[r0,r2]
000008  23f0              MOVS     r3,#0xf0
00000a  400b              ANDS     r3,r3,r1
00000c  111c              ASRS     r4,r3,#4
00000e  2301              MOVS     r3,#1
000010  40a3              LSLS     r3,r3,r4
000012  439a              BICS     r2,r2,r3
000014  070b              LSLS     r3,r1,#28
000016  0edb              LSRS     r3,r3,#27
000018  52c2              STRH     r2,[r0,r3]
;;;18     }
00001a  bd10              POP      {r4,pc}
;;;19     
                          ENDP

