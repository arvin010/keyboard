; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\list.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\list.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\FTLib\CMSIS\inc -I..\FTLib\Inc -I..\FTLib\Lib -I..\usb\inc -I..\user -I..\RTT -I..\iap2 -IC:\Users\dell1\AppData\Local\Arm\Packs\FMD\FT32F0xx_DFP\1.0.6\Drivers\CMSIS\FT32F0xx\Include -D__UVISION_VERSION=534 -DFT32F072x8 -DFT32F072x8 --omf_browse=.\objects\list.crf ..\iap2\List.c]
                          THUMB

                          AREA ||i.List_AddTail||, CODE, READONLY, ALIGN=1

                  List_AddTail PROC
;;;10     
;;;11     List* List_AddTail(List* pHead, List* pNode)
000000  4603              MOV      r3,r0
;;;12     {
;;;13     	List* pListNode = pHead;
000002  461a              MOV      r2,r3
;;;14          if(!(pNode))
000004  2900              CMP      r1,#0
000006  d101              BNE      |L1.12|
;;;15     	 	return Null;
000008  2000              MOVS     r0,#0
                  |L1.10|
;;;16     	//ASRT(pNode);
;;;17     	
;;;18     	pNode->m_pNext = Null;
;;;19     	if(pHead == Null)
;;;20     	{
;;;21     		pNode->m_pPre = Null;
;;;22     		pHead = pNode;
;;;23     		goto END;
;;;24     	}
;;;25     
;;;26     	//Get the tail node
;;;27     	while(pListNode->m_pNext)
;;;28     	{
;;;29     		pListNode = pListNode->m_pNext;
;;;30     		//ASRT(pListNode != pNode);
;;;31     		 if(!(pListNode != pNode))
;;;32     	 	return Null;
;;;33     	}
;;;34     
;;;35     	pListNode->m_pNext = pNode;
;;;36     	
;;;37     	pNode->m_pPre = pListNode;
;;;38     END:
;;;39     //	PF(DL_LISTEX, ("List_AddTail(), count=%d\n", List_Count(pHead)));
;;;40     	return pHead;
;;;41     }
00000a  4770              BX       lr
                  |L1.12|
00000c  2000              MOVS     r0,#0                 ;18
00000e  6008              STR      r0,[r1,#0]            ;18
000010  2b00              CMP      r3,#0                 ;19
000012  d102              BNE      |L1.26|
000014  6048              STR      r0,[r1,#4]            ;21
000016  460b              MOV      r3,r1                 ;22
000018  e00b              B        |L1.50|
                  |L1.26|
00001a  e004              B        |L1.38|
                  |L1.28|
00001c  6812              LDR      r2,[r2,#0]            ;29
00001e  428a              CMP      r2,r1                 ;31
000020  d101              BNE      |L1.38|
000022  2000              MOVS     r0,#0                 ;32
000024  e7f1              B        |L1.10|
                  |L1.38|
000026  6810              LDR      r0,[r2,#0]            ;27
000028  2800              CMP      r0,#0                 ;27
00002a  d1f7              BNE      |L1.28|
00002c  6011              STR      r1,[r2,#0]            ;35
00002e  604a              STR      r2,[r1,#4]            ;37
000030  bf00              NOP                            ;38
                  |L1.50|
000032  4618              MOV      r0,r3                 ;40
000034  e7e9              B        |L1.10|
;;;42     
                          ENDP


                          AREA ||i.List_Count||, CODE, READONLY, ALIGN=1

                  List_Count PROC
;;;121    
;;;122    int List_Count(List* pNode)
000000  4601              MOV      r1,r0
;;;123    {
;;;124    	List* pHead = pNode;
000002  460a              MOV      r2,r1
;;;125    	int nCount = 0;
000004  2300              MOVS     r3,#0
;;;126    
;;;127    	if(pNode == Null)
000006  2900              CMP      r1,#0
000008  d100              BNE      |L2.12|
                  |L2.10|
;;;128    	{
;;;129    		return 0;
;;;130    	}
;;;131    
;;;132    	while(pHead)
;;;133    	{
;;;134    		pHead = pHead->m_pPre;
;;;135    		nCount++;
;;;136    	}
;;;137    
;;;138    	pNode = pNode->m_pNext;
;;;139    	while(pNode)
;;;140    	{
;;;141    		pNode = pNode->m_pNext;
;;;142    		nCount++;
;;;143    	}	
;;;144    
;;;145    	return nCount;
;;;146    }
00000a  4770              BX       lr
                  |L2.12|
00000c  e001              B        |L2.18|
                  |L2.14|
00000e  6852              LDR      r2,[r2,#4]            ;134
000010  1c5b              ADDS     r3,r3,#1              ;135
                  |L2.18|
000012  2a00              CMP      r2,#0                 ;132
000014  d1fb              BNE      |L2.14|
000016  6809              LDR      r1,[r1,#0]            ;138
000018  e001              B        |L2.30|
                  |L2.26|
00001a  6809              LDR      r1,[r1,#0]            ;141
00001c  1c5b              ADDS     r3,r3,#1              ;142
                  |L2.30|
00001e  2900              CMP      r1,#0                 ;139
000020  d1fb              BNE      |L2.26|
000022  4618              MOV      r0,r3                 ;145
000024  e7f1              B        |L2.10|
;;;147    
                          ENDP


                          AREA ||i.List_Init||, CODE, READONLY, ALIGN=1

                  List_Init PROC
;;;506    
;;;6      void List_Init(List* pList)
000000  2100              MOVS     r1,#0
;;;7      {
;;;8      	memset(pList, 0, sizeof(List));
000002  6001              STR      r1,[r0,#0]
000004  6041              STR      r1,[r0,#4]
000006  6081              STR      r1,[r0,#8]
;;;9      }
000008  4770              BX       lr
;;;10     
                          ENDP


                          AREA ||i.List_Remove||, CODE, READONLY, ALIGN=1

                  List_Remove PROC
;;;54     //Return: head node
;;;55     List* List_Remove(List* pNode)
000000  4601              MOV      r1,r0
;;;56     {
;;;57     	List* pHead = pNode;
000002  460a              MOV      r2,r1
;;;58     	
;;;59     	//ASRT(pNode);
;;;60     	if(!(pNode))
000004  2900              CMP      r1,#0
000006  d100              BNE      |L4.10|
                  |L4.8|
;;;61     		   return Null;
;;;62     
;;;63     	//Head of list
;;;64     	if(pNode->m_pPre == Null)
;;;65     	{
;;;66     		pHead = pNode->m_pNext;
;;;67     		if(pHead)
;;;68     		{
;;;69     			pHead->m_pPre = Null;
;;;70     		}
;;;71     		goto END;
;;;72     	}
;;;73     	else
;;;74     	{
;;;75     		pNode->m_pPre->m_pNext = pNode->m_pNext;
;;;76     		
;;;77     		if(pNode->m_pNext)
;;;78     		{
;;;79     			pNode->m_pNext->m_pPre = pNode->m_pPre;
;;;80     		}
;;;81     	}
;;;82     
;;;83     	while(pHead->m_pPre)
;;;84     	{
;;;85     		pHead = pHead->m_pPre;
;;;86     	}
;;;87     
;;;88     END:	
;;;89     	pNode->m_pPre = Null;
;;;90     	pNode->m_pNext = Null;
;;;91     	
;;;92     //	PF(DL_LISTEX, ("List_Remove(), count=%d\n", List_Count(pHead)));
;;;93     	return pHead;
;;;94     }
000008  4770              BX       lr
                  |L4.10|
00000a  6848              LDR      r0,[r1,#4]            ;64
00000c  2800              CMP      r0,#0                 ;64
00000e  d104              BNE      |L4.26|
000010  680a              LDR      r2,[r1,#0]            ;66
000012  2a00              CMP      r2,#0                 ;67
000014  d000              BEQ      |L4.24|
000016  6050              STR      r0,[r2,#4]            ;69
                  |L4.24|
000018  e00e              B        |L4.56|
                  |L4.26|
00001a  684b              LDR      r3,[r1,#4]            ;75
00001c  6808              LDR      r0,[r1,#0]            ;75
00001e  6018              STR      r0,[r3,#0]            ;75
000020  6808              LDR      r0,[r1,#0]            ;77
000022  2800              CMP      r0,#0                 ;77
000024  d002              BEQ      |L4.44|
000026  680b              LDR      r3,[r1,#0]            ;79
000028  6848              LDR      r0,[r1,#4]            ;79
00002a  6058              STR      r0,[r3,#4]            ;79
                  |L4.44|
00002c  e000              B        |L4.48|
                  |L4.46|
00002e  6852              LDR      r2,[r2,#4]            ;85
                  |L4.48|
000030  6850              LDR      r0,[r2,#4]            ;83
000032  2800              CMP      r0,#0                 ;83
000034  d1fb              BNE      |L4.46|
000036  bf00              NOP                            ;88
                  |L4.56|
000038  2000              MOVS     r0,#0                 ;89
00003a  6048              STR      r0,[r1,#4]            ;89
00003c  6008              STR      r0,[r1,#0]            ;90
00003e  4610              MOV      r0,r2                 ;93
000040  e7e2              B        |L4.8|
;;;95     
                          ENDP


                          AREA ||i.List_RemoveAll||, CODE, READONLY, ALIGN=1

                  List_RemoveAll PROC
;;;42     
;;;43     void List_RemoveAll(List* pNode)
000000  b530              PUSH     {r4,r5,lr}
;;;44     {
000002  4604              MOV      r4,r0
;;;45     	List* pTemp = pNode;
000004  4625              MOV      r5,r4
;;;46     
;;;47     	while(pTemp)
000006  e003              B        |L5.16|
                  |L5.8|
;;;48     	{
;;;49     		pTemp = List_Remove(pNode);
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       List_Remove
00000e  4605              MOV      r5,r0
                  |L5.16|
000010  2d00              CMP      r5,#0                 ;47
000012  d1f9              BNE      |L5.8|
;;;50     	}
;;;51     }
000014  bd30              POP      {r4,r5,pc}
;;;52     
                          ENDP


                          AREA ||i.List_isIn||, CODE, READONLY, ALIGN=1

                  List_isIn PROC
;;;95     
;;;96     Bool List_isIn(List* pHead, List* pNode)
000000  4602              MOV      r2,r0
;;;97     {
;;;98     	if(Null == pHead || Null == pNode)
000002  2a00              CMP      r2,#0
000004  d001              BEQ      |L6.10|
000006  2900              CMP      r1,#0
000008  d101              BNE      |L6.14|
                  |L6.10|
;;;99     	{
;;;100    		return False;
00000a  2000              MOVS     r0,#0
                  |L6.12|
;;;101    	}
;;;102    
;;;103    	if(pHead == pNode)
;;;104    	{
;;;105    		return True;
;;;106    	}
;;;107    	
;;;108    	pHead = pHead->m_pNext;
;;;109    	while(pHead)
;;;110    	{
;;;111    		if(pHead == pNode)
;;;112    		{
;;;113    			return True;
;;;114    		}
;;;115    
;;;116    		pHead = pHead->m_pNext;
;;;117    	}
;;;118    
;;;119    	return False;
;;;120    }
00000c  4770              BX       lr
                  |L6.14|
00000e  428a              CMP      r2,r1                 ;103
000010  d101              BNE      |L6.22|
000012  2001              MOVS     r0,#1                 ;105
000014  e7fa              B        |L6.12|
                  |L6.22|
000016  6812              LDR      r2,[r2,#0]            ;108
000018  e004              B        |L6.36|
                  |L6.26|
00001a  428a              CMP      r2,r1                 ;111
00001c  d101              BNE      |L6.34|
00001e  2001              MOVS     r0,#1                 ;113
000020  e7f4              B        |L6.12|
                  |L6.34|
000022  6812              LDR      r2,[r2,#0]            ;116
                  |L6.36|
000024  2a00              CMP      r2,#0                 ;109
000026  d1f8              BNE      |L6.26|
000028  2000              MOVS     r0,#0                 ;119
00002a  e7ef              B        |L6.12|
;;;121    
                          ENDP

