; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\matrix.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\matrix.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\FTLib\CMSIS\inc -I..\FTLib\Inc -I..\FTLib\Lib -I..\usb\inc -I..\user -I..\RTT -I.\RTE\_Keyboard -IC:\Users\Reidgjiao\AppData\Local\Arm\Packs\FMD\FT32F0xx_DFP\1.0.6\Drivers\CMSIS\FT32F0xx\Include -IC:\Keil_v5-MDK\ARM\CMSIS\Include -D__UVISION_VERSION=529 -DFT32F072x8 -DFT32F072x8 --omf_browse=.\objects\matrix.crf ..\user\Matrix.c]
                          THUMB

                          AREA ||i.ghost||, CODE, READONLY, ALIGN=1

                  ghost PROC
;;;159    
;;;160    static void ghost(matrix_t* matrix, uint32_t* pos)
000000  b5f3              PUSH     {r0,r1,r4-r7,lr}
;;;161    {
000002  b087              SUB      sp,sp,#0x1c
000004  4604              MOV      r4,r0
;;;162    	uint8_t i, j, x, y;
;;;163    	uint8_t rc = 0x00, cc = 0x00;
000006  2000              MOVS     r0,#0
000008  9003              STR      r0,[sp,#0xc]
00000a  9002              STR      r0,[sp,#8]
;;;164    	uint8_t(*p)[matrix->row_qty] = NULL;
00000c  7820              LDRB     r0,[r4,#0]
00000e  9006              STR      r0,[sp,#0x18]
000010  2000              MOVS     r0,#0
000012  9001              STR      r0,[sp,#4]
;;;165    	
;;;166    	p = (uint8_t(*)[matrix->row_qty])matrix->map;
000014  7820              LDRB     r0,[r4,#0]
000016  9005              STR      r0,[sp,#0x14]
000018  4620              MOV      r0,r4
00001a  300a              ADDS     r0,r0,#0xa
00001c  f7fffffe          BL       __aeabi_uread4
000020  9001              STR      r0,[sp,#4]
;;;167    	for(i = 0; i < matrix->col_qty; ++i)
000022  2500              MOVS     r5,#0
000024  e05c              B        |L1.224|
                  |L1.38|
;;;168    	{
;;;169    		for(j = 0; j < matrix->row_qty && pos[i] != 0x00; ++j)
000026  2600              MOVS     r6,#0
000028  e050              B        |L1.204|
                  |L1.42|
;;;170    		{
;;;171    			if( pos[i] & 1 << j )
00002a  00a9              LSLS     r1,r5,#2
00002c  9808              LDR      r0,[sp,#0x20]
00002e  5840              LDR      r0,[r0,r1]
000030  2101              MOVS     r1,#1
000032  40b1              LSLS     r1,r1,r6
000034  4008              ANDS     r0,r0,r1
000036  2800              CMP      r0,#0
000038  d043              BEQ      |L1.194|
;;;172    			{
;;;173    				
;;;174    				/*统计键位所在的C,R线按下键数量*/
;;;175    				for(x = 0; x < matrix->col_qty; ++x)
00003a  2000              MOVS     r0,#0
00003c  9004              STR      r0,[sp,#0x10]
00003e  e015              B        |L1.108|
                  |L1.64|
;;;176    				{
;;;177    					if( matrix->pos[x] & 1 << j )
000040  9804              LDR      r0,[sp,#0x10]
000042  0041              LSLS     r1,r0,#1
000044  4620              MOV      r0,r4
000046  300e              ADDS     r0,r0,#0xe
000048  1809              ADDS     r1,r1,r0
00004a  7848              LDRB     r0,[r1,#1]
00004c  7809              LDRB     r1,[r1,#0]
00004e  0200              LSLS     r0,r0,#8
000050  4308              ORRS     r0,r0,r1
000052  2101              MOVS     r1,#1
000054  40b1              LSLS     r1,r1,r6
000056  4008              ANDS     r0,r0,r1
000058  2800              CMP      r0,#0
00005a  d003              BEQ      |L1.100|
;;;178    					{
;;;179    						rc++;
00005c  9803              LDR      r0,[sp,#0xc]
00005e  1c40              ADDS     r0,r0,#1
000060  b2c0              UXTB     r0,r0
000062  9003              STR      r0,[sp,#0xc]
                  |L1.100|
000064  9804              LDR      r0,[sp,#0x10]         ;175
000066  1c40              ADDS     r0,r0,#1              ;175
000068  b2c0              UXTB     r0,r0                 ;175
00006a  9004              STR      r0,[sp,#0x10]         ;175
                  |L1.108|
00006c  7861              LDRB     r1,[r4,#1]            ;175
00006e  9804              LDR      r0,[sp,#0x10]         ;175
000070  4281              CMP      r1,r0                 ;175
000072  dce5              BGT      |L1.64|
;;;180    					}
;;;181    				}
;;;182    				for(y = 0; y < matrix->row_qty; ++y)
000074  2700              MOVS     r7,#0
000076  e012              B        |L1.158|
                  |L1.120|
;;;183    				{
;;;184    					if( matrix->pos[i] & 1 << y )
000078  0069              LSLS     r1,r5,#1
00007a  4620              MOV      r0,r4
00007c  300e              ADDS     r0,r0,#0xe
00007e  1809              ADDS     r1,r1,r0
000080  7848              LDRB     r0,[r1,#1]
000082  7809              LDRB     r1,[r1,#0]
000084  0200              LSLS     r0,r0,#8
000086  4308              ORRS     r0,r0,r1
000088  2101              MOVS     r1,#1
00008a  40b9              LSLS     r1,r1,r7
00008c  4008              ANDS     r0,r0,r1
00008e  2800              CMP      r0,#0
000090  d003              BEQ      |L1.154|
;;;185    					{
;;;186    						cc++;
000092  9802              LDR      r0,[sp,#8]
000094  1c40              ADDS     r0,r0,#1
000096  b2c0              UXTB     r0,r0
000098  9002              STR      r0,[sp,#8]
                  |L1.154|
00009a  1c78              ADDS     r0,r7,#1              ;182
00009c  b2c7              UXTB     r7,r0                 ;182
                  |L1.158|
00009e  7820              LDRB     r0,[r4,#0]            ;182
0000a0  42b8              CMP      r0,r7                 ;182
0000a2  dce9              BGT      |L1.120|
;;;187    					}
;;;188    				}
;;;189    
;;;190    				/*不是鬼键*/
;;;191    				if(!(rc >= 2 && cc >= 2))
0000a4  9803              LDR      r0,[sp,#0xc]
0000a6  2802              CMP      r0,#2
0000a8  db02              BLT      |L1.176|
0000aa  9802              LDR      r0,[sp,#8]
0000ac  2802              CMP      r0,#2
0000ae  da08              BGE      |L1.194|
                  |L1.176|
;;;192    				{
;;;193    					key_down(&matrix->buf, p[i][j]);
0000b0  9806              LDR      r0,[sp,#0x18]
0000b2  4368              MULS     r0,r5,r0
0000b4  9a01              LDR      r2,[sp,#4]
0000b6  1880              ADDS     r0,r0,r2
0000b8  5d81              LDRB     r1,[r0,r6]
0000ba  4620              MOV      r0,r4
0000bc  304e              ADDS     r0,r0,#0x4e
0000be  f7fffffe          BL       key_down
                  |L1.194|
;;;194    				}
;;;195    			}
;;;196    			rc = 0;
0000c2  2000              MOVS     r0,#0
0000c4  9003              STR      r0,[sp,#0xc]
;;;197    			cc = 0;
0000c6  9002              STR      r0,[sp,#8]
0000c8  1c70              ADDS     r0,r6,#1              ;169
0000ca  b2c6              UXTB     r6,r0                 ;169
                  |L1.204|
0000cc  7820              LDRB     r0,[r4,#0]            ;169
0000ce  42b0              CMP      r0,r6                 ;169
0000d0  dd04              BLE      |L1.220|
0000d2  00a9              LSLS     r1,r5,#2              ;169
0000d4  9808              LDR      r0,[sp,#0x20]         ;169
0000d6  5840              LDR      r0,[r0,r1]            ;169
0000d8  2800              CMP      r0,#0                 ;169
0000da  d1a6              BNE      |L1.42|
                  |L1.220|
0000dc  1c68              ADDS     r0,r5,#1              ;167
0000de  b2c5              UXTB     r5,r0                 ;167
                  |L1.224|
0000e0  7860              LDRB     r0,[r4,#1]            ;167
0000e2  42a8              CMP      r0,r5                 ;167
0000e4  dc9f              BGT      |L1.38|
;;;198    		}
;;;199    	}
;;;200    }
0000e6  b009              ADD      sp,sp,#0x24
0000e8  bdf0              POP      {r4-r7,pc}
;;;201    
                          ENDP


                          AREA ||i.init_matrix_gpio||, CODE, READONLY, ALIGN=1

                  init_matrix_gpio PROC
;;;5      
;;;6      static void init_matrix_gpio(matrix_t* matrix)
000000  b5f8              PUSH     {r3-r7,lr}
;;;7      {
000002  4605              MOV      r5,r0
;;;8      	uint8_t i;
;;;9      
;;;10         for(i = 0; i < matrix->row_qty; ++i)
000004  2400              MOVS     r4,#0
000006  e01a              B        |L2.62|
                  |L2.8|
;;;11         {
;;;12     		set_IO_PinMode(matrix->row_table[i].port, matrix->row_table[i].pin, ModeIN_PD_noINT);
000008  1ca8              ADDS     r0,r5,#2
00000a  f7fffffe          BL       __aeabi_uread4
00000e  210a              MOVS     r1,#0xa
000010  4361              MULS     r1,r4,r1
000012  1840              ADDS     r0,r0,r1
000014  1d07              ADDS     r7,r0,#4
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       __aeabi_uread4
00001c  b286              UXTH     r6,r0
00001e  1ca8              ADDS     r0,r5,#2
000020  f7fffffe          BL       __aeabi_uread4
000024  210a              MOVS     r1,#0xa
000026  4361              MULS     r1,r4,r1
000028  1847              ADDS     r7,r0,r1
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       __aeabi_uread4
000030  2207              MOVS     r2,#7
000032  4631              MOV      r1,r6
000034  9000              STR      r0,[sp,#0]
000036  f7fffffe          BL       set_IO_PinMode
00003a  1c60              ADDS     r0,r4,#1              ;10
00003c  b2c4              UXTB     r4,r0                 ;10
                  |L2.62|
00003e  7828              LDRB     r0,[r5,#0]            ;10
000040  42a0              CMP      r0,r4                 ;10
000042  dce1              BGT      |L2.8|
;;;13         }
;;;14         for(i = 0; i < matrix->col_qty; ++i)
000044  2400              MOVS     r4,#0
000046  e01a              B        |L2.126|
                  |L2.72|
;;;15         {
;;;16     		set_IO_PinMode(matrix->col_table[i].port, matrix->col_table[i].pin, ModeIN_PD_noINT);
000048  1da8              ADDS     r0,r5,#6
00004a  f7fffffe          BL       __aeabi_uread4
00004e  210a              MOVS     r1,#0xa
000050  4361              MULS     r1,r4,r1
000052  1840              ADDS     r0,r0,r1
000054  1d07              ADDS     r7,r0,#4
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       __aeabi_uread4
00005c  b286              UXTH     r6,r0
00005e  1da8              ADDS     r0,r5,#6
000060  f7fffffe          BL       __aeabi_uread4
000064  210a              MOVS     r1,#0xa
000066  4361              MULS     r1,r4,r1
000068  1847              ADDS     r7,r0,r1
00006a  4638              MOV      r0,r7
00006c  f7fffffe          BL       __aeabi_uread4
000070  2207              MOVS     r2,#7
000072  4631              MOV      r1,r6
000074  9000              STR      r0,[sp,#0]
000076  f7fffffe          BL       set_IO_PinMode
00007a  1c60              ADDS     r0,r4,#1              ;14
00007c  b2c4              UXTB     r4,r0                 ;14
                  |L2.126|
00007e  7868              LDRB     r0,[r5,#1]            ;14
000080  42a0              CMP      r0,r4                 ;14
000082  dce1              BGT      |L2.72|
;;;17         }
;;;18     }
000084  bdf8              POP      {r3-r7,pc}
;;;19     
                          ENDP


                          AREA ||i.init_scan_col||, CODE, READONLY, ALIGN=1

                  init_scan_col PROC
;;;43     //3、读col ,高电平，按下
;;;44     static void init_scan_col(matrix_t* matrix)
000000  b5f8              PUSH     {r3-r7,lr}
;;;45     {
000002  4605              MOV      r5,r0
;;;46     	uint8_t i;
;;;47     	
;;;48         for(i = 0; i < matrix->col_qty; ++i)
000004  2400              MOVS     r4,#0
000006  e01a              B        |L3.62|
                  |L3.8|
;;;49         {
;;;50     		set_IO_PinMode(matrix->col_table[i].port, matrix->col_table[i].pin, ModeIN_PD_noINT);
000008  1da8              ADDS     r0,r5,#6
00000a  f7fffffe          BL       __aeabi_uread4
00000e  210a              MOVS     r1,#0xa
000010  4361              MULS     r1,r4,r1
000012  1840              ADDS     r0,r0,r1
000014  1d07              ADDS     r7,r0,#4
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       __aeabi_uread4
00001c  b286              UXTH     r6,r0
00001e  1da8              ADDS     r0,r5,#6
000020  f7fffffe          BL       __aeabi_uread4
000024  210a              MOVS     r1,#0xa
000026  4361              MULS     r1,r4,r1
000028  1847              ADDS     r7,r0,r1
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       __aeabi_uread4
000030  2207              MOVS     r2,#7
000032  4631              MOV      r1,r6
000034  9000              STR      r0,[sp,#0]
000036  f7fffffe          BL       set_IO_PinMode
00003a  1c60              ADDS     r0,r4,#1              ;48
00003c  b2c4              UXTB     r4,r0                 ;48
                  |L3.62|
00003e  7868              LDRB     r0,[r5,#1]            ;48
000040  42a0              CMP      r0,r4                 ;48
000042  dce1              BGT      |L3.8|
;;;51         }
;;;52         for(i = 0; i < matrix->row_qty; ++i)
000044  2400              MOVS     r4,#0
000046  e033              B        |L3.176|
                  |L3.72|
;;;53         {
;;;54     		set_IO_PinMode(matrix->row_table[i].port, matrix->row_table[i].pin, ModeOut_noINT);
000048  1ca8              ADDS     r0,r5,#2
00004a  f7fffffe          BL       __aeabi_uread4
00004e  210a              MOVS     r1,#0xa
000050  4361              MULS     r1,r4,r1
000052  1840              ADDS     r0,r0,r1
000054  1d07              ADDS     r7,r0,#4
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       __aeabi_uread4
00005c  b286              UXTH     r6,r0
00005e  1ca8              ADDS     r0,r5,#2
000060  f7fffffe          BL       __aeabi_uread4
000064  210a              MOVS     r1,#0xa
000066  4361              MULS     r1,r4,r1
000068  1847              ADDS     r7,r0,r1
00006a  4638              MOV      r0,r7
00006c  f7fffffe          BL       __aeabi_uread4
000070  2204              MOVS     r2,#4
000072  4631              MOV      r1,r6
000074  9000              STR      r0,[sp,#0]
000076  f7fffffe          BL       set_IO_PinMode
;;;55     		GPIO_WriteBit(matrix->row_table[i].port, matrix->row_table[i].pin, HIGH);
00007a  1ca8              ADDS     r0,r5,#2
00007c  f7fffffe          BL       __aeabi_uread4
000080  210a              MOVS     r1,#0xa
000082  4361              MULS     r1,r4,r1
000084  1840              ADDS     r0,r0,r1
000086  1d07              ADDS     r7,r0,#4
000088  4638              MOV      r0,r7
00008a  f7fffffe          BL       __aeabi_uread4
00008e  b286              UXTH     r6,r0
000090  1ca8              ADDS     r0,r5,#2
000092  f7fffffe          BL       __aeabi_uread4
000096  210a              MOVS     r1,#0xa
000098  4361              MULS     r1,r4,r1
00009a  1847              ADDS     r7,r0,r1
00009c  4638              MOV      r0,r7
00009e  f7fffffe          BL       __aeabi_uread4
0000a2  2201              MOVS     r2,#1
0000a4  4631              MOV      r1,r6
0000a6  9000              STR      r0,[sp,#0]
0000a8  f7fffffe          BL       GPIO_WriteBit
0000ac  1c60              ADDS     r0,r4,#1              ;52
0000ae  b2c4              UXTB     r4,r0                 ;52
                  |L3.176|
0000b0  7828              LDRB     r0,[r5,#0]            ;52
0000b2  42a0              CMP      r0,r4                 ;52
0000b4  dcc8              BGT      |L3.72|
;;;56         }
;;;57     }
0000b6  bdf8              POP      {r3-r7,pc}
;;;58     
                          ENDP


                          AREA ||i.init_scan_row||, CODE, READONLY, ALIGN=1

                  init_scan_row PROC
;;;24     //3、读row ,高电平，按下
;;;25     static void init_scan_row(matrix_t* matrix)
000000  b5f8              PUSH     {r3-r7,lr}
;;;26     {
000002  4605              MOV      r5,r0
;;;27     	uint8_t i;
;;;28     	
;;;29         for(i = 0; i < matrix->row_qty; ++i)
000004  2400              MOVS     r4,#0
000006  e01a              B        |L4.62|
                  |L4.8|
;;;30         {
;;;31     		set_IO_PinMode(matrix->row_table[i].port, matrix->row_table[i].pin, ModeIN_PD_noINT);
000008  1ca8              ADDS     r0,r5,#2
00000a  f7fffffe          BL       __aeabi_uread4
00000e  210a              MOVS     r1,#0xa
000010  4361              MULS     r1,r4,r1
000012  1840              ADDS     r0,r0,r1
000014  1d07              ADDS     r7,r0,#4
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       __aeabi_uread4
00001c  b286              UXTH     r6,r0
00001e  1ca8              ADDS     r0,r5,#2
000020  f7fffffe          BL       __aeabi_uread4
000024  210a              MOVS     r1,#0xa
000026  4361              MULS     r1,r4,r1
000028  1847              ADDS     r7,r0,r1
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       __aeabi_uread4
000030  2207              MOVS     r2,#7
000032  4631              MOV      r1,r6
000034  9000              STR      r0,[sp,#0]
000036  f7fffffe          BL       set_IO_PinMode
00003a  1c60              ADDS     r0,r4,#1              ;29
00003c  b2c4              UXTB     r4,r0                 ;29
                  |L4.62|
00003e  7828              LDRB     r0,[r5,#0]            ;29
000040  42a0              CMP      r0,r4                 ;29
000042  dce1              BGT      |L4.8|
;;;32         }
;;;33         for(i = 0; i < matrix->col_qty; ++i)
000044  2400              MOVS     r4,#0
000046  e033              B        |L4.176|
                  |L4.72|
;;;34         {
;;;35     		set_IO_PinMode(matrix->col_table[i].port, matrix->col_table[i].pin, ModeOut_noINT);
000048  1da8              ADDS     r0,r5,#6
00004a  f7fffffe          BL       __aeabi_uread4
00004e  210a              MOVS     r1,#0xa
000050  4361              MULS     r1,r4,r1
000052  1840              ADDS     r0,r0,r1
000054  1d07              ADDS     r7,r0,#4
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       __aeabi_uread4
00005c  b286              UXTH     r6,r0
00005e  1da8              ADDS     r0,r5,#6
000060  f7fffffe          BL       __aeabi_uread4
000064  210a              MOVS     r1,#0xa
000066  4361              MULS     r1,r4,r1
000068  1847              ADDS     r7,r0,r1
00006a  4638              MOV      r0,r7
00006c  f7fffffe          BL       __aeabi_uread4
000070  2204              MOVS     r2,#4
000072  4631              MOV      r1,r6
000074  9000              STR      r0,[sp,#0]
000076  f7fffffe          BL       set_IO_PinMode
;;;36     		GPIO_WriteBit(matrix->col_table[i].port, matrix->col_table[i].pin, HIGH);
00007a  1da8              ADDS     r0,r5,#6
00007c  f7fffffe          BL       __aeabi_uread4
000080  210a              MOVS     r1,#0xa
000082  4361              MULS     r1,r4,r1
000084  1840              ADDS     r0,r0,r1
000086  1d07              ADDS     r7,r0,#4
000088  4638              MOV      r0,r7
00008a  f7fffffe          BL       __aeabi_uread4
00008e  b286              UXTH     r6,r0
000090  1da8              ADDS     r0,r5,#6
000092  f7fffffe          BL       __aeabi_uread4
000096  210a              MOVS     r1,#0xa
000098  4361              MULS     r1,r4,r1
00009a  1847              ADDS     r7,r0,r1
00009c  4638              MOV      r0,r7
00009e  f7fffffe          BL       __aeabi_uread4
0000a2  2201              MOVS     r2,#1
0000a4  4631              MOV      r1,r6
0000a6  9000              STR      r0,[sp,#0]
0000a8  f7fffffe          BL       GPIO_WriteBit
0000ac  1c60              ADDS     r0,r4,#1              ;33
0000ae  b2c4              UXTB     r4,r0                 ;33
                  |L4.176|
0000b0  7868              LDRB     r0,[r5,#1]            ;33
0000b2  42a0              CMP      r0,r4                 ;33
0000b4  dcc8              BGT      |L4.72|
;;;37         }
;;;38     }
0000b6  bdf8              POP      {r3-r7,pc}
;;;39     
                          ENDP


                          AREA ||i.matrix_key_handle||, CODE, READONLY, ALIGN=1

                  matrix_key_handle PROC
;;;204    
;;;205    void matrix_key_handle(matrix_t* matrix)
000000  b5f0              PUSH     {r4-r7,lr}
;;;206    {
000002  b0a3              SUB      sp,sp,#0x8c
000004  4604              MOV      r4,r0
;;;207        uint8_t r, c;
;;;208    	uint32_t t_pos[32] = {0x00};
000006  2180              MOVS     r1,#0x80
000008  a802              ADD      r0,sp,#8
00000a  f7fffffe          BL       __aeabi_memclr4
;;;209        uint8_t(*p)[matrix->row_qty] = NULL;
00000e  7827              LDRB     r7,[r4,#0]
000010  2000              MOVS     r0,#0
000012  9001              STR      r0,[sp,#4]
;;;210    	
;;;211    	p = (uint8_t(*)[matrix->row_qty])matrix->map;
000014  7820              LDRB     r0,[r4,#0]
000016  9022              STR      r0,[sp,#0x88]
000018  4620              MOV      r0,r4
00001a  300a              ADDS     r0,r0,#0xa
00001c  f7fffffe          BL       __aeabi_uread4
000020  9001              STR      r0,[sp,#4]
;;;212    	key_clear(&(matrix->buf));
000022  4620              MOV      r0,r4
000024  304e              ADDS     r0,r0,#0x4e
000026  f7fffffe          BL       key_clear
;;;213    	
;;;214    	for(c = 0; c < matrix->col_qty; ++c)
00002a  2500              MOVS     r5,#0
00002c  e03d              B        |L5.170|
                  |L5.46|
;;;215        {
;;;216    		for(r = 0; r < matrix->row_qty && matrix->pos[c] != 0x00; ++r)
00002e  2600              MOVS     r6,#0
000030  e02c              B        |L5.140|
                  |L5.50|
;;;217    		{	
;;;218    			if( matrix->pos[c] & 1 << r )
000032  0069              LSLS     r1,r5,#1
000034  4620              MOV      r0,r4
000036  300e              ADDS     r0,r0,#0xe
000038  1809              ADDS     r1,r1,r0
00003a  7848              LDRB     r0,[r1,#1]
00003c  7809              LDRB     r1,[r1,#0]
00003e  0200              LSLS     r0,r0,#8
000040  4308              ORRS     r0,r0,r1
000042  2101              MOVS     r1,#1
000044  40b1              LSLS     r1,r1,r6
000046  4008              ANDS     r0,r0,r1
000048  2800              CMP      r0,#0
00004a  d01d              BEQ      |L5.136|
;;;219    			{
;;;220    				/*如果是上一次按下键，则可排除嫌疑*/
;;;221    				if(get_key(&matrix->last_buf, p[c][r]))
00004c  4638              MOV      r0,r7
00004e  4368              MULS     r0,r5,r0
000050  9a01              LDR      r2,[sp,#4]
000052  1880              ADDS     r0,r0,r2
000054  5d81              LDRB     r1,[r0,r6]
000056  4620              MOV      r0,r4
000058  306e              ADDS     r0,r0,#0x6e
00005a  f7fffffe          BL       get_key
00005e  2800              CMP      r0,#0
000060  d009              BEQ      |L5.118|
;;;222    				{
;;;223    					key_down(&matrix->buf, p[c][r]);
000062  4638              MOV      r0,r7
000064  4368              MULS     r0,r5,r0
000066  9a01              LDR      r2,[sp,#4]
000068  1880              ADDS     r0,r0,r2
00006a  5d81              LDRB     r1,[r0,r6]
00006c  4620              MOV      r0,r4
00006e  304e              ADDS     r0,r0,#0x4e
000070  f7fffffe          BL       key_down
000074  e008              B        |L5.136|
                  |L5.118|
;;;224    				}
;;;225    				else
;;;226    				{
;;;227    					t_pos[c] |= 1 << r;
000076  00a8              LSLS     r0,r5,#2
000078  a902              ADD      r1,sp,#8
00007a  5808              LDR      r0,[r1,r0]
00007c  2101              MOVS     r1,#1
00007e  40b1              LSLS     r1,r1,r6
000080  4308              ORRS     r0,r0,r1
000082  00a9              LSLS     r1,r5,#2
000084  aa02              ADD      r2,sp,#8
000086  5050              STR      r0,[r2,r1]
                  |L5.136|
000088  1c70              ADDS     r0,r6,#1              ;216
00008a  b2c6              UXTB     r6,r0                 ;216
                  |L5.140|
00008c  7820              LDRB     r0,[r4,#0]            ;216
00008e  42b0              CMP      r0,r6                 ;216
000090  dd09              BLE      |L5.166|
000092  0069              LSLS     r1,r5,#1              ;216
000094  4620              MOV      r0,r4                 ;216
000096  300e              ADDS     r0,r0,#0xe            ;216
000098  1809              ADDS     r1,r1,r0              ;216
00009a  7848              LDRB     r0,[r1,#1]            ;216
00009c  7809              LDRB     r1,[r1,#0]            ;216
00009e  0200              LSLS     r0,r0,#8              ;216
0000a0  4308              ORRS     r0,r0,r1              ;216
0000a2  2800              CMP      r0,#0                 ;216
0000a4  d1c5              BNE      |L5.50|
                  |L5.166|
0000a6  1c68              ADDS     r0,r5,#1              ;214
0000a8  b2c5              UXTB     r5,r0                 ;214
                  |L5.170|
0000aa  7860              LDRB     r0,[r4,#1]            ;214
0000ac  42a8              CMP      r0,r5                 ;214
0000ae  dcbe              BGT      |L5.46|
;;;228    				}
;;;229    			}
;;;230    		}
;;;231        }
;;;232    	
;;;233    	/*新按下键GHOST判断*/
;;;234    	ghost(matrix, t_pos);
0000b0  a902              ADD      r1,sp,#8
0000b2  4620              MOV      r0,r4
0000b4  f7fffffe          BL       ghost
;;;235    		
;;;236    	/*本轮结束，清尾工作*/
;;;237        memset(matrix->pos, 0x00, sizeof(matrix->pos));
0000b8  2140              MOVS     r1,#0x40
0000ba  4620              MOV      r0,r4
0000bc  300e              ADDS     r0,r0,#0xe
0000be  f7fffffe          BL       __aeabi_memclr
;;;238        memcpy(&matrix->last_buf, &matrix->buf, sizeof(matrix->last_buf));
0000c2  2220              MOVS     r2,#0x20
0000c4  4621              MOV      r1,r4
0000c6  314e              ADDS     r1,r1,#0x4e
0000c8  4620              MOV      r0,r4
0000ca  306e              ADDS     r0,r0,#0x6e
0000cc  f7fffffe          BL       __aeabi_memcpy
;;;239    
;;;240    }
0000d0  b023              ADD      sp,sp,#0x8c
0000d2  bdf0              POP      {r4-r7,pc}
;;;241    
                          ENDP


                          AREA ||i.matrix_scan_again||, CODE, READONLY, ALIGN=1

                  matrix_scan_again PROC
;;;128    
;;;129    void matrix_scan_again(matrix_t* matrix)
000000  b5fe              PUSH     {r1-r7,lr}
;;;130    {
000002  4604              MOV      r4,r0
;;;131    	uint8_t i, j;
;;;132    	
;;;133    	init_matrix_gpio(matrix);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       init_matrix_gpio
;;;134    	for(i = 0; i < matrix->col_qty; ++i)
00000a  2500              MOVS     r5,#0
00000c  e0a0              B        |L6.336|
                  |L6.14|
;;;135    	{
;;;136    		for(j = 0; j < matrix->row_qty && matrix->pos[i] != 0x00; ++j)
00000e  2600              MOVS     r6,#0
000010  e08e              B        |L6.304|
                  |L6.18|
;;;137    		{
;;;138    			if(matrix->pos[i] & 1 << j)
000012  0069              LSLS     r1,r5,#1
000014  4620              MOV      r0,r4
000016  300e              ADDS     r0,r0,#0xe
000018  1809              ADDS     r1,r1,r0
00001a  7848              LDRB     r0,[r1,#1]
00001c  7809              LDRB     r1,[r1,#0]
00001e  0200              LSLS     r0,r0,#8
000020  4308              ORRS     r0,r0,r1
000022  2101              MOVS     r1,#1
000024  40b1              LSLS     r1,r1,r6
000026  4008              ANDS     r0,r0,r1
000028  2800              CMP      r0,#0
00002a  d07f              BEQ      |L6.300|
;;;139    			{
;;;140    				set_IO_PinMode(matrix->col_table[i].port, matrix->col_table[i].pin, ModeOut_PU_noINT);
00002c  1da0              ADDS     r0,r4,#6
00002e  f7fffffe          BL       __aeabi_uread4
000032  210a              MOVS     r1,#0xa
000034  4369              MULS     r1,r5,r1
000036  1840              ADDS     r0,r0,r1
000038  1d07              ADDS     r7,r0,#4
00003a  4638              MOV      r0,r7
00003c  f7fffffe          BL       __aeabi_uread4
000040  b280              UXTH     r0,r0
000042  9001              STR      r0,[sp,#4]
000044  1da0              ADDS     r0,r4,#6
000046  f7fffffe          BL       __aeabi_uread4
00004a  210a              MOVS     r1,#0xa
00004c  4369              MULS     r1,r5,r1
00004e  1847              ADDS     r7,r0,r1
000050  4638              MOV      r0,r7
000052  f7fffffe          BL       __aeabi_uread4
000056  2205              MOVS     r2,#5
000058  9000              STR      r0,[sp,#0]
00005a  9901              LDR      r1,[sp,#4]
00005c  f7fffffe          BL       set_IO_PinMode
;;;141    				GPIO_WriteBit(matrix->col_table[i].port, matrix->col_table[i].pin, HIGH);
000060  1da0              ADDS     r0,r4,#6
000062  f7fffffe          BL       __aeabi_uread4
000066  210a              MOVS     r1,#0xa
000068  4369              MULS     r1,r5,r1
00006a  1840              ADDS     r0,r0,r1
00006c  1d07              ADDS     r7,r0,#4
00006e  4638              MOV      r0,r7
000070  f7fffffe          BL       __aeabi_uread4
000074  b280              UXTH     r0,r0
000076  9001              STR      r0,[sp,#4]
000078  1da0              ADDS     r0,r4,#6
00007a  f7fffffe          BL       __aeabi_uread4
00007e  210a              MOVS     r1,#0xa
000080  4369              MULS     r1,r5,r1
000082  1847              ADDS     r7,r0,r1
000084  4638              MOV      r0,r7
000086  f7fffffe          BL       __aeabi_uread4
00008a  2201              MOVS     r2,#1
00008c  9000              STR      r0,[sp,#0]
00008e  9901              LDR      r1,[sp,#4]
000090  f7fffffe          BL       GPIO_WriteBit
;;;142    				__NOP();
000094  bf00              NOP      
;;;143    				__NOP();
000096  bf00              NOP      
;;;144    				if(!GPIO_ReadInputDataBit(matrix->row_table[j].port, matrix->row_table[j].pin))
000098  1ca0              ADDS     r0,r4,#2
00009a  f7fffffe          BL       __aeabi_uread4
00009e  210a              MOVS     r1,#0xa
0000a0  4371              MULS     r1,r6,r1
0000a2  1840              ADDS     r0,r0,r1
0000a4  1d07              ADDS     r7,r0,#4
0000a6  4638              MOV      r0,r7
0000a8  f7fffffe          BL       __aeabi_uread4
0000ac  b280              UXTH     r0,r0
0000ae  9001              STR      r0,[sp,#4]
0000b0  1ca0              ADDS     r0,r4,#2
0000b2  f7fffffe          BL       __aeabi_uread4
0000b6  210a              MOVS     r1,#0xa
0000b8  4371              MULS     r1,r6,r1
0000ba  1847              ADDS     r7,r0,r1
0000bc  4638              MOV      r0,r7
0000be  f7fffffe          BL       __aeabi_uread4
0000c2  9000              STR      r0,[sp,#0]
0000c4  9901              LDR      r1,[sp,#4]
0000c6  f7fffffe          BL       GPIO_ReadInputDataBit
0000ca  2800              CMP      r0,#0
0000cc  d111              BNE      |L6.242|
;;;145    				{
;;;146    					matrix->pos[i] &= ~(1 << j);
0000ce  0069              LSLS     r1,r5,#1
0000d0  4620              MOV      r0,r4
0000d2  300e              ADDS     r0,r0,#0xe
0000d4  1809              ADDS     r1,r1,r0
0000d6  7848              LDRB     r0,[r1,#1]
0000d8  7809              LDRB     r1,[r1,#0]
0000da  0200              LSLS     r0,r0,#8
0000dc  4308              ORRS     r0,r0,r1
0000de  2101              MOVS     r1,#1
0000e0  40b1              LSLS     r1,r1,r6
0000e2  4388              BICS     r0,r0,r1
0000e4  006a              LSLS     r2,r5,#1
0000e6  4621              MOV      r1,r4
0000e8  310e              ADDS     r1,r1,#0xe
0000ea  1851              ADDS     r1,r2,r1
0000ec  7008              STRB     r0,[r1,#0]
0000ee  0a00              LSRS     r0,r0,#8
0000f0  7048              STRB     r0,[r1,#1]
                  |L6.242|
;;;147    				}
;;;148    				set_IO_PinMode(matrix->col_table[i].port, matrix->col_table[i].pin, ModeIN_PD_noINT);
0000f2  1da0              ADDS     r0,r4,#6
0000f4  f7fffffe          BL       __aeabi_uread4
0000f8  210a              MOVS     r1,#0xa
0000fa  4369              MULS     r1,r5,r1
0000fc  1840              ADDS     r0,r0,r1
0000fe  1d07              ADDS     r7,r0,#4
000100  4638              MOV      r0,r7
000102  f7fffffe          BL       __aeabi_uread4
000106  b280              UXTH     r0,r0
000108  9001              STR      r0,[sp,#4]
00010a  1da0              ADDS     r0,r4,#6
00010c  f7fffffe          BL       __aeabi_uread4
000110  210a              MOVS     r1,#0xa
000112  4369              MULS     r1,r5,r1
000114  1847              ADDS     r7,r0,r1
000116  4638              MOV      r0,r7
000118  f7fffffe          BL       __aeabi_uread4
00011c  2207              MOVS     r2,#7
00011e  9000              STR      r0,[sp,#0]
000120  9901              LDR      r1,[sp,#4]
000122  f7fffffe          BL       set_IO_PinMode
;;;149    				__NOP();
000126  e000              B        |L6.298|
000128  e000              B        |L6.300|
                  |L6.298|
00012a  bf00              NOP      
                  |L6.300|
00012c  1c70              ADDS     r0,r6,#1              ;136
00012e  b2c6              UXTB     r6,r0                 ;136
                  |L6.304|
000130  7820              LDRB     r0,[r4,#0]            ;136
000132  42b0              CMP      r0,r6                 ;136
000134  dd0a              BLE      |L6.332|
000136  0069              LSLS     r1,r5,#1              ;136
000138  4620              MOV      r0,r4                 ;136
00013a  300e              ADDS     r0,r0,#0xe            ;136
00013c  1809              ADDS     r1,r1,r0              ;136
00013e  7848              LDRB     r0,[r1,#1]            ;136
000140  7809              LDRB     r1,[r1,#0]            ;136
000142  0200              LSLS     r0,r0,#8              ;136
000144  4308              ORRS     r0,r0,r1              ;136
000146  2800              CMP      r0,#0                 ;136
000148  d000              BEQ      |L6.332|
00014a  e762              B        |L6.18|
                  |L6.332|
00014c  1c68              ADDS     r0,r5,#1              ;134
00014e  b2c5              UXTB     r5,r0                 ;134
                  |L6.336|
000150  7860              LDRB     r0,[r4,#1]            ;134
000152  42a8              CMP      r0,r5                 ;134
000154  dd00              BLE      |L6.344|
000156  e75a              B        |L6.14|
                  |L6.344|
;;;150    			}
;;;151    		}
;;;152    	}
;;;153    }
000158  bdfe              POP      {r1-r7,pc}
;;;154    
                          ENDP


                          AREA ||i.matrix_scan_key||, CODE, READONLY, ALIGN=1

                  matrix_scan_key PROC
;;;91     
;;;92     void matrix_scan_key(matrix_t* matrix)
000000  b5fe              PUSH     {r1-r7,lr}
;;;93     {
000002  4604              MOV      r4,r0
;;;94     	uint8_t i, j;
;;;95     	uint8_t(*p)[matrix->row_qty] = NULL;
000004  7827              LDRB     r7,[r4,#0]
000006  2000              MOVS     r0,#0
000008  9000              STR      r0,[sp,#0]
;;;96     	
;;;97     	p = (uint8_t(*)[matrix->row_qty])matrix->map;
00000a  7820              LDRB     r0,[r4,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4620              MOV      r0,r4
000010  300a              ADDS     r0,r0,#0xa
000012  f7fffffe          BL       __aeabi_uread4
000016  9000              STR      r0,[sp,#0]
;;;98     	
;;;99     	/*初始化所有GPIO*/
;;;100    	init_matrix_gpio(matrix);
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       init_matrix_gpio
;;;101    	
;;;102    	/*扫描ROW*/
;;;103    	init_scan_row(matrix);
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       init_scan_row
;;;104    	scan_row(matrix);
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       scan_row
;;;105    
;;;106    	/*扫描COL*/
;;;107    	init_scan_col(matrix);
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       init_scan_col
;;;108    	scan_col(matrix);
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       scan_col
;;;109    
;;;110    	/*键位置位*/
;;;111    	for(i = 0; i < matrix->col_qty; ++i)
000036  2500              MOVS     r5,#0
000038  e03e              B        |L7.184|
                  |L7.58|
;;;112    	{
;;;113    		for(j = 0; j < matrix->row_qty; ++j)
00003a  2600              MOVS     r6,#0
00003c  e037              B        |L7.174|
                  |L7.62|
;;;114    		{
;;;115    			if( matrix->pos[matrix->col_qty] & (1 << j) && 
00003e  7860              LDRB     r0,[r4,#1]
000040  0041              LSLS     r1,r0,#1
000042  4620              MOV      r0,r4
000044  300e              ADDS     r0,r0,#0xe
000046  1809              ADDS     r1,r1,r0
000048  7848              LDRB     r0,[r1,#1]
00004a  7809              LDRB     r1,[r1,#0]
00004c  0200              LSLS     r0,r0,#8
00004e  4308              ORRS     r0,r0,r1
000050  2101              MOVS     r1,#1
000052  40b1              LSLS     r1,r1,r6
000054  4008              ANDS     r0,r0,r1
000056  2800              CMP      r0,#0
000058  d027              BEQ      |L7.170|
;;;116    				matrix->pos[i] & 1 << matrix->row_qty && 
00005a  0069              LSLS     r1,r5,#1
00005c  4620              MOV      r0,r4
00005e  300e              ADDS     r0,r0,#0xe
000060  1809              ADDS     r1,r1,r0
000062  7848              LDRB     r0,[r1,#1]
000064  7809              LDRB     r1,[r1,#0]
000066  0200              LSLS     r0,r0,#8
000068  4308              ORRS     r0,r0,r1
00006a  7822              LDRB     r2,[r4,#0]
00006c  2101              MOVS     r1,#1
00006e  4091              LSLS     r1,r1,r2
000070  4008              ANDS     r0,r0,r1
000072  2800              CMP      r0,#0
000074  d019              BEQ      |L7.170|
;;;117    				p[i][j] != 0x00)
000076  4638              MOV      r0,r7
000078  4368              MULS     r0,r5,r0
00007a  9900              LDR      r1,[sp,#0]
00007c  1840              ADDS     r0,r0,r1
00007e  5d80              LDRB     r0,[r0,r6]
000080  2800              CMP      r0,#0
000082  d012              BEQ      |L7.170|
;;;118    			{
;;;119    				matrix->pos[i] |= 1 << j;
000084  0069              LSLS     r1,r5,#1
000086  4620              MOV      r0,r4
000088  300e              ADDS     r0,r0,#0xe
00008a  1809              ADDS     r1,r1,r0
00008c  7848              LDRB     r0,[r1,#1]
00008e  7809              LDRB     r1,[r1,#0]
000090  0200              LSLS     r0,r0,#8
000092  4308              ORRS     r0,r0,r1
000094  2101              MOVS     r1,#1
000096  40b1              LSLS     r1,r1,r6
000098  4308              ORRS     r0,r0,r1
00009a  b281              UXTH     r1,r0
00009c  006a              LSLS     r2,r5,#1
00009e  4620              MOV      r0,r4
0000a0  300e              ADDS     r0,r0,#0xe
0000a2  1810              ADDS     r0,r2,r0
0000a4  7001              STRB     r1,[r0,#0]
0000a6  0a09              LSRS     r1,r1,#8
0000a8  7041              STRB     r1,[r0,#1]
                  |L7.170|
0000aa  1c70              ADDS     r0,r6,#1              ;113
0000ac  b2c6              UXTB     r6,r0                 ;113
                  |L7.174|
0000ae  7820              LDRB     r0,[r4,#0]            ;113
0000b0  42b0              CMP      r0,r6                 ;113
0000b2  dcc4              BGT      |L7.62|
0000b4  1c68              ADDS     r0,r5,#1              ;111
0000b6  b2c5              UXTB     r5,r0                 ;111
                  |L7.184|
0000b8  7860              LDRB     r0,[r4,#1]            ;111
0000ba  42a8              CMP      r0,r5                 ;111
0000bc  dcbd              BGT      |L7.58|
;;;120    			}
;;;121    		}
;;;122    	}
;;;123    	
;;;124    }
0000be  bdfe              POP      {r1-r7,pc}
;;;125    
                          ENDP


                          AREA ||i.scan_col||, CODE, READONLY, ALIGN=1

                  scan_col PROC
;;;75     
;;;76     static void scan_col(matrix_t* matrix)
000000  b5f8              PUSH     {r3-r7,lr}
;;;77     {
000002  4604              MOV      r4,r0
;;;78     	uint8_t i; 
;;;79     	
;;;80     	for(i = 0; i < matrix->col_qty; ++i)
000004  2500              MOVS     r5,#0
000006  e02f              B        |L8.104|
                  |L8.8|
;;;81     	{
;;;82     		if(GPIO_ReadInputDataBit(matrix->col_table[i].port, matrix->col_table[i].pin))
000008  1da0              ADDS     r0,r4,#6
00000a  f7fffffe          BL       __aeabi_uread4
00000e  210a              MOVS     r1,#0xa
000010  4369              MULS     r1,r5,r1
000012  1840              ADDS     r0,r0,r1
000014  1d07              ADDS     r7,r0,#4
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       __aeabi_uread4
00001c  b286              UXTH     r6,r0
00001e  1da0              ADDS     r0,r4,#6
000020  f7fffffe          BL       __aeabi_uread4
000024  210a              MOVS     r1,#0xa
000026  4369              MULS     r1,r5,r1
000028  1847              ADDS     r7,r0,r1
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       __aeabi_uread4
000030  4631              MOV      r1,r6
000032  9000              STR      r0,[sp,#0]
000034  f7fffffe          BL       GPIO_ReadInputDataBit
000038  2800              CMP      r0,#0
00003a  d013              BEQ      |L8.100|
;;;83     		{
;;;84     			matrix->pos[i] |= 1 << matrix->row_qty;
00003c  0069              LSLS     r1,r5,#1
00003e  4620              MOV      r0,r4
000040  300e              ADDS     r0,r0,#0xe
000042  1809              ADDS     r1,r1,r0
000044  7848              LDRB     r0,[r1,#1]
000046  7809              LDRB     r1,[r1,#0]
000048  0200              LSLS     r0,r0,#8
00004a  4308              ORRS     r0,r0,r1
00004c  7822              LDRB     r2,[r4,#0]
00004e  2101              MOVS     r1,#1
000050  4091              LSLS     r1,r1,r2
000052  4308              ORRS     r0,r0,r1
000054  b281              UXTH     r1,r0
000056  006a              LSLS     r2,r5,#1
000058  4620              MOV      r0,r4
00005a  300e              ADDS     r0,r0,#0xe
00005c  1810              ADDS     r0,r2,r0
00005e  7001              STRB     r1,[r0,#0]
000060  0a09              LSRS     r1,r1,#8
000062  7041              STRB     r1,[r0,#1]
                  |L8.100|
000064  1c68              ADDS     r0,r5,#1              ;80
000066  b2c5              UXTB     r5,r0                 ;80
                  |L8.104|
000068  7860              LDRB     r0,[r4,#1]            ;80
00006a  42a8              CMP      r0,r5                 ;80
00006c  dccc              BGT      |L8.8|
;;;85     		}
;;;86     	}
;;;87     }
00006e  bdf8              POP      {r3-r7,pc}
;;;88     
                          ENDP


                          AREA ||i.scan_row||, CODE, READONLY, ALIGN=1

                  scan_row PROC
;;;60     
;;;61     static void scan_row(matrix_t* matrix)
000000  b5f8              PUSH     {r3-r7,lr}
;;;62     {
000002  4604              MOV      r4,r0
;;;63     	uint8_t i;
;;;64     	
;;;65     	for(i = 0; i < matrix->row_qty; ++i)
000004  2500              MOVS     r5,#0
000006  e030              B        |L9.106|
                  |L9.8|
;;;66     	{
;;;67     		if(GPIO_ReadInputDataBit(matrix->row_table[i].port, matrix->row_table[i].pin))
000008  1ca0              ADDS     r0,r4,#2
00000a  f7fffffe          BL       __aeabi_uread4
00000e  210a              MOVS     r1,#0xa
000010  4369              MULS     r1,r5,r1
000012  1840              ADDS     r0,r0,r1
000014  1d07              ADDS     r7,r0,#4
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       __aeabi_uread4
00001c  b286              UXTH     r6,r0
00001e  1ca0              ADDS     r0,r4,#2
000020  f7fffffe          BL       __aeabi_uread4
000024  210a              MOVS     r1,#0xa
000026  4369              MULS     r1,r5,r1
000028  1847              ADDS     r7,r0,r1
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       __aeabi_uread4
000030  4631              MOV      r1,r6
000032  9000              STR      r0,[sp,#0]
000034  f7fffffe          BL       GPIO_ReadInputDataBit
000038  2800              CMP      r0,#0
00003a  d014              BEQ      |L9.102|
;;;68     		{
;;;69     			matrix->pos[matrix->col_qty] |= 1 << i;
00003c  7860              LDRB     r0,[r4,#1]
00003e  0041              LSLS     r1,r0,#1
000040  4620              MOV      r0,r4
000042  300e              ADDS     r0,r0,#0xe
000044  1809              ADDS     r1,r1,r0
000046  7848              LDRB     r0,[r1,#1]
000048  7809              LDRB     r1,[r1,#0]
00004a  0200              LSLS     r0,r0,#8
00004c  4308              ORRS     r0,r0,r1
00004e  2101              MOVS     r1,#1
000050  40a9              LSLS     r1,r1,r5
000052  4308              ORRS     r0,r0,r1
000054  b281              UXTH     r1,r0
000056  7860              LDRB     r0,[r4,#1]
000058  0042              LSLS     r2,r0,#1
00005a  4620              MOV      r0,r4
00005c  300e              ADDS     r0,r0,#0xe
00005e  1810              ADDS     r0,r2,r0
000060  7001              STRB     r1,[r0,#0]
000062  0a09              LSRS     r1,r1,#8
000064  7041              STRB     r1,[r0,#1]
                  |L9.102|
000066  1c68              ADDS     r0,r5,#1              ;65
000068  b2c5              UXTB     r5,r0                 ;65
                  |L9.106|
00006a  7820              LDRB     r0,[r4,#0]            ;65
00006c  42a8              CMP      r0,r5                 ;65
00006e  dccb              BGT      |L9.8|
;;;70     		}
;;;71     	}
;;;72     }
000070  bdf8              POP      {r3-r7,pc}
;;;73     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\user\\Matrix.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_Matrix_c_327508cf____REV16|
#line 129 "..\\FTLib\\CMSIS\\inc\\core_cmInstr.h"
|__asm___8_Matrix_c_327508cf____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_Matrix_c_327508cf____REVSH|
#line 144
|__asm___8_Matrix_c_327508cf____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
